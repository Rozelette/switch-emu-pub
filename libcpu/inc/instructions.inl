// Branch
INST(B_cond,  "B", (cond_branch, label_cond_branch), 0b11111111000000000000000000010000, 0b01010100000000000000000000000000)
INST(BR,      "BR", (Xn),                            0b11111111111111111111110000011111, 0b11010110000111110000000000000000)
INST(BLR,     "BLR", (Xn),                           0b11111111111111111111110000011111, 0b11010110001111110000000000000000)
INST(RET,     "RET", (Xn),                           0b11111111111111111111110000011111, 0b11010110010111110000000000000000)
INST(ERET,    "ERET", (),                            0b11111111111111111111111111111111, 0b11010110100111110000001111100000)
INST(DRPS,    "DRPS", (),                            0b11111111111111111111111111111111, 0b11010110101111110000001111100000)
INST(B,       "B", (label_branch),                   0b11111100000000000000000000000000, 0b00010100000000000000000000000000)
INST(BL,      "BL", (label_branch),                  0b11111100000000000000000000000000, 0b10010100000000000000000000000000)
INST(CBZ_32,  "CBZ", (Wt, label_cond_branch),        0b11111111000000000000000000000000, 0b00110100000000000000000000000000)
INST(CBNZ_32, "CBNZ", (Wt, label_cond_branch),       0b11111111000000000000000000000000, 0b00110101000000000000000000000000)
INST(CBZ_64,  "CBZ", (Xt, label_cond_branch),        0b11111111000000000000000000000000, 0b10110100000000000000000000000000)
INST(CBNZ_64, "CBNZ", (Xt, label_cond_branch),       0b11111111000000000000000000000000, 0b10110101000000000000000000000000)
INST(TBZ,     "TBZ", (Xt, imm_tbz, label_tbz),       0b01111111000000000000000000000000, 0b00110110000000000000000000000000) // TODO should this be Wt conditionaly?
INST(TBNZ,    "TBNZ", (Xt, imm_tbz, label_tbz),      0b01111111000000000000000000000000, 0b00110111000000000000000000000000) // TODO should this be Wt conditionaly?

// Exception Generating
INST(SVC, "SVC", (imm_exceptions),     0b11111111111000000000000000011111, 0b11010100000000000000000000000001)
INST(HVC, "HVC", (imm_exceptions),     0b11111111111000000000000000011111, 0b11010100000000000000000000000010)
INST(SMC, "SMC", (imm_exceptions),     0b11111111111000000000000000011111, 0b11010100000000000000000000000011)
INST(BRK, "BRK", (imm_exceptions),     0b11111111111000000000000000011111, 0b11010100001000000000000000000000)
INST(HLT, "HLT", (imm_exceptions),     0b11111111111000000000000000011111, 0b11010100010000000000000000000000)
INST(DCPS1, "DCPS1", (imm_exceptions), 0b11111111111000000000000000011111, 0b11010100101000000000000000000001) // TODO imm print optional?
INST(DCPS2, "DCPS2", (imm_exceptions), 0b11111111111000000000000000011111, 0b11010100101000000000000000000010) // TODO imm print optional?
INST(DCPS3, "DCPS3", (imm_exceptions), 0b11111111111000000000000000011111, 0b11010100101000000000000000000011) // TODO imm print optional?

// System
INST(MSR_imm, "MSR", (TODO),      0b11111111111110001111000000011111, 0b11010101000000000100000000011111)
INST(MSR_reg, "MSR", (TODO),      0b11111111111100000000000000000000, 0b11010101000100000000000000000000)
INST(HINT, "HINT", (imm_hint),    0b11111111111111111111000000011111, 0b11010101000000110010000000011111)
INST(NOP, "NOP", (),              0b11111111111111111111111111111111, 0b11010101000000110010000000011111)
INST(YIELD, "YIELD", (),          0b11111111111111111111111111111111, 0b11010101000000110010000000111111)
INST(WFE, "WFE", (),              0b11111111111111111111111111111111, 0b11010101000000110010000001011111)
INST(WFI, "WFI", (),              0b11111111111111111111111111111111, 0b11010101000000110010000001111111)
INST(SEV, "SEV", (),              0b11111111111111111111111111111111, 0b11010101000000110010000010011111)
INST(SEVL, "SEVL", (),            0b11111111111111111111111111111111, 0b11010101000000110010000010111111)
INST(CLREX, "CLREX", (imm_clrex), 0b11111111111111111111000011111111, 0b11010101000000110011000001011111)
INST(DSB, "DSB", (barrier_type),  0b11111111111111111111000011111111, 0b11010101000000110011000010011111)
INST(DMB, "DMB", (barrier_type),  0b11111111111111111111000011111111, 0b11010101000000110011000010111111)
INST(ISB, "ISB", (barrier_type),  0b11111111111111111111000011111111, 0b11010101000000110011000011011111)
INST(SYS, "SYS", (TODO),          0b11111111111110000000000000000000, 0b11010101000010000000000000000000)
INST(SYSL, "SYSL", (TODO),        0b11111111111110000000000000000000, 0b11010101001010000000000000000000)
INST(MRS, "MRS", (TODO),          0b11111111111100000000000000000000, 0b11010101001100000000000000000000)

// Data Proccessing Immediate
// PC-rel. addressing
INST(ADR, "ADR", (Xd, imm_adr),    0b10011111000000000000000000000000, 0b00010000000000000000000000000000)
INST(ADRP, "ADRP", (Xd, imm_adrp), 0b10011111000000000000000000000000, 0b10010000000000000000000000000000)
// Add/subtract (immediate)
INST(ADD_32_imm, "ADD", (Wd_WSP, Wn_WSP, imm_addsub), 0b11111111100000000000000000000000, 0b00010001000000000000000000000000)
INST(ADDS_32_imm, "ADDS", (Wd, Wn_WSP, imm_addsub),   0b11111111100000000000000000000000, 0b00110001000000000000000000000000)
INST(SUB_32_imm, "SUB", (Wd_WSP, Wn_WSP, imm_addsub), 0b11111111100000000000000000000000, 0b01010001000000000000000000000000)
INST(SUBS_32_imm, "SUBS", (Wd, Wn_WSP, imm_addsub),   0b11111111100000000000000000000000, 0b01110001000000000000000000000000)
INST(ADD_64_imm, "ADD", (Xd_SP, Xn_SP, imm_addsub),   0b11111111100000000000000000000000, 0b10010001000000000000000000000000)
INST(ADDS_64_imm, "ADDS", (Xd, Xn_SP, imm_addsub),    0b11111111100000000000000000000000, 0b10110001000000000000000000000000)
INST(SUB_64_imm, "SUB", (Xd_SP, Xn_SP, imm_addsub),   0b11111111100000000000000000000000, 0b11010001000000000000000000000000)
INST(SUBS_64_imm, "SUBS", (Xd_SP, Xn_SP, imm_addsub), 0b11111111100000000000000000000000, 0b11110001000000000000000000000000)
// Logical (immediate)
INST(AND_32_imm, "AND", (Wd_WSP, Wn, imm_logical), 0b11111111110000000000000000000000, 0b00010010000000000000000000000000)
INST(ORR_32_imm, "ORR", (Wd_WSP, Wn, imm_logical), 0b11111111110000000000000000000000, 0b00110010000000000000000000000000)
INST(EOR_32_imm, "EOR", (Wd_WSP, Wn, imm_logical), 0b11111111110000000000000000000000, 0b01010010000000000000000000000000)
INST(ANDS_32_imm, "ANDS", (Wd, Wn, imm_logical),   0b11111111110000000000000000000000, 0b01110010000000000000000000000000)
INST(AND_64_imm, "AND", (Xd_SP, Xn, imm_logical),  0b11111111100000000000000000000000, 0b10010010000000000000000000000000)
INST(ORR_64_imm, "ORR", (Xd_SP, Xn, imm_logical),  0b11111111100000000000000000000000, 0b10110010000000000000000000000000)
INST(EOR_64_imm, "EOR", (Xd_SP, Xn, imm_logical),  0b11111111100000000000000000000000, 0b11010010000000000000000000000000)
INST(ANDS_64_imm, "ANDS", (Xd, Xn, imm_logical),   0b11111111100000000000000000000000, 0b11110010000000000000000000000000)
// Move wide (immediate)
INST(MOVN_32, "MOVN", (Wd, imm_mov), 0b11111111110000000000000000000000, 0b00010010100000000000000000000000)
INST(MOVZ_32, "MOVZ", (Wd, imm_mov), 0b11111111110000000000000000000000, 0b01010010100000000000000000000000)
INST(MOVK_32, "MOVK", (Wd, imm_mov), 0b11111111110000000000000000000000, 0b01110010100000000000000000000000)
INST(MOVN_64, "MOVN", (Xd, imm_mov), 0b11111111100000000000000000000000, 0b10010010100000000000000000000000)
INST(MOVZ_64, "MOVZ", (Xd, imm_mov), 0b11111111100000000000000000000000, 0b11010010100000000000000000000000)
INST(MOVK_64, "MOVK", (Xd, imm_mov), 0b11111111100000000000000000000000, 0b11110010100000000000000000000000)
// Bitfield
INST(SBFM_32, "SBFM", (Wd, Wn, imm_bitfield), 0b11111111111000001000000000000000, 0b00010011000000000000000000000000)
INST(BFM_32, "BFM", (Wd, Wn, imm_bitfield),   0b11111111111000001000000000000000, 0b00110011000000000000000000000000)
INST(UBFM_32, "UBFM", (Wd, Wn, imm_bitfield), 0b11111111111000001000000000000000, 0b01010011000000000000000000000000)
INST(SBFM_64, "SBFM", (Xd, Xn, imm_bitfield), 0b11111111110000000000000000000000, 0b10010011010000000000000000000000)
INST(BFM_64, "BFM", (Xd, Xn, imm_bitfield),   0b11111111110000000000000000000000, 0b10110011010000000000000000000000)
INST(UBFM_64, "UBFM", (Xd, Xn, imm_bitfield), 0b11111111110000000000000000000000, 0b11010011010000000000000000000000)
// Extract
INST(EXTR_32, "EXTR", (Wd, Wn, Wm, imm_extract), 0b11111111111000001000000000000000, 0b00010011100000000000000000000000)
INST(EXTR_64, "EXTR", (Xd, Xn, Xm, imm_extract), 0b11111111111000000000000000000000, 0b10010011110000000000000000000000)

// Data Proccessing Register
// Data-processing (2 source)
INST(UDIV_32, "UDIV", (Wd, Wn, Wm),    0b11111111111000001111110000000000, 0b00011010110000000000100000000000)
INST(SDIV_32, "SDIV", (Wd, Wn, Wm),    0b11111111111000001111110000000000, 0b00011010110000000000110000000000)
INST(LSLV_32, "LSL", (Wd, Wn, Wm),     0b11111111111000001111110000000000, 0b00011010110000000010000000000000) // LSL is the preferred disassemly of LSLV
INST(LSRV_32, "LSR", (Wd, Wn, Wm),     0b11111111111000001111110000000000, 0b00011010110000000010010000000000) // LSR is the preferred disassemly of LSRV
INST(ASRV_32, "ASR", (Wd, Wn, Wm),     0b11111111111000001111110000000000, 0b00011010110000000010100000000000) // ASR is the preferred disassemly of ASRV
INST(RORV_32, "ROR", (Wd, Wn, Wm),     0b11111111111000001111110000000000, 0b00011010110000000010110000000000) // ROR is the preferred disassemly of RORV
INST(UDIV_64, "UDIV", (Xd, Xn, Xm),    0b11111111111000001111110000000000, 0b10011010110000000000100000000000)
INST(SDIV_64, "SDIV", (Xd, Xn, Xm),    0b11111111111000001111110000000000, 0b10011010110000000000110000000000)
INST(LSLV_64, "LSL", (Xd, Xn, Xm),     0b11111111111000001111110000000000, 0b10011010110000000010000000000000) // LSL is the preferred disassemly of LSLV
INST(LSRV_64, "LSR", (Xd, Xn, Xm),     0b11111111111000001111110000000000, 0b10011010110000000010010000000000) // LSR is the preferred disassemly of LSRV
INST(ASRV_64, "ASR", (Xd, Xn, Xm),     0b11111111111000001111110000000000, 0b10011010110000000010100000000000) // ASR is the preferred disassemly of ASRV
INST(RORV_64, "ROR", (Xd, Xn, Xm),     0b11111111111000001111110000000000, 0b10011010110000000010110000000000) // ROR is the preferred disassemly of RORV
INST(CRC32B, "CRC32B", (Wd, Wn, Wm),   0b11111111111000001111110000000000, 0b00011010110000000100000000000000)
INST(CRC32H, "CRC32H", (Wd, Wn, Wm),   0b11111111111000001111110000000000, 0b00011010110000000100010000000000)
INST(CRC32W, "CRC32W", (Wd, Wn, Wm),   0b11111111111000001111110000000000, 0b00011010110000000100100000000000)
INST(CRC32X, "CRC32X", (Wd, Wn, Xm),   0b11111111111000001111110000000000, 0b10011010110000000100110000000000)
INST(CRC32CB, "CRC32CB", (Wd, Wn, Wm), 0b11111111111000001111110000000000, 0b00011010110000000101000000000000)
INST(CRC32CH, "CRC32CH", (Wd, Wn, Wm), 0b11111111111000001111110000000000, 0b00011010110000000101010000000000)
INST(CRC32CW, "CRC32CW", (Wd, Wn, Wm), 0b11111111111000001111110000000000, 0b00011010110000000101100000000000)
INST(CRC32CX, "CRC32CX", (Wd, Wn, Xm), 0b11111111111000001111110000000000, 0b10011010110000000101110000000000)
// Data-processing (1 source)
INST(RBIT_32, "RBIT", (Wd, Wn),   0b11111111111111111111110000000000, 0b01011010110000000000000000000000)
INST(REV16_32, "REV16", (Wd, Wn), 0b11111111111111111111110000000000, 0b01011010110000000000010000000000)
INST(REV_32, "REV", (Wd, Wn),     0b11111111111111111111110000000000, 0b01011010110000000000100000000000)
INST(CLZ_32, "CLZ", (Wd, Wn),     0b11111111111111111111110000000000, 0b01011010110000000001000000000000)
INST(CLS_32, "CLS", (Wd, Wn),     0b11111111111111111111110000000000, 0b01011010110000000001010000000000)
INST(RBIT_64, "RBIT", (Xd, Xn),   0b11111111111111111111110000000000, 0b11011010110000000000000000000000)
INST(REV16_64, "REV16", (Xd, Xn), 0b11111111111111111111110000000000, 0b11011010110000000000010000000000)
INST(REV32_64, "REV32", (Xd, Xn), 0b11111111111111111111110000000000, 0b11011010110000000000100000000000)
INST(REV_64, "REV", (Xd, Xn),     0b11111111111111111111110000000000, 0b11011010110000000000110000000000)
INST(CLZ_64, "CLZ", (Xd, Xn),     0b11111111111111111111110000000000, 0b11011010110000000001000000000000)
INST(CLS_64, "CLS", (Xd, Xn),     0b11111111111111111111110000000000, 0b11011010110000000001010000000000)
// Logical (shifted register)
INST(AND_32_shifted, "AND", (Wd, Wn, Wm, shifted_reg),   0b11111111001000001000000000000000, 0b00001010000000000000000000000000)
INST(BIC_32_shifted, "BIC", (Wd, Wn, Wm, shifted_reg),   0b11111111001000001000000000000000, 0b00001010001000000000000000000000)
INST(ORR_32_shifted, "ORR", (Wd, Wn, Wm, shifted_reg),   0b11111111001000001000000000000000, 0b00101010000000000000000000000000)
INST(ORN_32_shifted, "ORN", (Wd, Wn, Wm, shifted_reg),   0b11111111001000001000000000000000, 0b00101010001000000000000000000000)
INST(EOR_32_shifted, "EOR", (Wd, Wn, Wm, shifted_reg),   0b11111111001000001000000000000000, 0b01001010000000000000000000000000)
INST(EON_32_shifted, "EON", (Wd, Wn, Wm, shifted_reg),   0b11111111001000001000000000000000, 0b01001010001000000000000000000000)
INST(ANDS_32_shifted, "ANDS", (Wd, Wn, Wm, shifted_reg), 0b11111111001000001000000000000000, 0b01101010000000000000000000000000)
INST(BICS_32_shifted, "BICS", (Wd, Wn, Wm, shifted_reg), 0b11111111001000001000000000000000, 0b01101010001000000000000000000000)
INST(AND_64_shifted, "AND", (Xd, Xn, Xm, shifted_reg),   0b11111111001000000000000000000000, 0b10001010000000000000000000000000)
INST(BIC_64_shifted, "BIC", (Xd, Xn, Xm, shifted_reg),   0b11111111001000000000000000000000, 0b10001010001000000000000000000000)
INST(ORR_64_shifted, "ORR", (Xd, Xn, Xm, shifted_reg),   0b11111111001000000000000000000000, 0b10101010000000000000000000000000)
INST(ORN_64_shifted, "ORN", (Xd, Xn, Xm, shifted_reg),   0b11111111001000000000000000000000, 0b10101010001000000000000000000000)
INST(EOR_64_shifted, "EOR", (Xd, Xn, Xm, shifted_reg),   0b11111111001000000000000000000000, 0b11001010000000000000000000000000)
INST(EON_64_shifted, "EON", (Xd, Xn, Xm, shifted_reg),   0b11111111001000000000000000000000, 0b11001010001000000000000000000000)
INST(ANDS_64_shifted, "ANDS", (Xd, Xn, Xm, shifted_reg), 0b11111111001000000000000000000000, 0b11101010000000000000000000000000)
INST(BICS_64_shifted, "BICS", (Xd, Xn, Xm, shifted_reg), 0b11111111001000000000000000000000, 0b11101010001000000000000000000000)
// Add/subtract (shifted register)
INST(ADD_32_shifted, "ADD", (Wd, Wn, Wm, shifted_reg),   0b11111111001000001000000000000000, 0b00001011000000000000000000000000, (), (0b00000000110000000000000000000000))
INST(ADDS_32_shifted, "ADDS", (Wd, Wn, Wm, shifted_reg), 0b11111111001000001000000000000000, 0b00101011000000000000000000000000, (), (0b00000000110000000000000000000000))
INST(SUB_32_shifted, "SUB", (Wd, Wn, Wm, shifted_reg),   0b11111111001000001000000000000000, 0b01001011000000000000000000000000, (), (0b00000000110000000000000000000000))
INST(SUBS_32_shifted, "SUBS", (Wd, Wn, Wm, shifted_reg), 0b11111111001000001000000000000000, 0b01101011000000000000000000000000, (), (0b00000000110000000000000000000000))
INST(ADD_64_shifted, "ADD", (Xd, Xn, Xm, shifted_reg),   0b11111111001000000000000000000000, 0b10001011000000000000000000000000, (), (0b00000000110000000000000000000000))
INST(ADDS_64_shifted, "ADDS", (Xd, Xn, Xm, shifted_reg), 0b11111111001000000000000000000000, 0b10101011000000000000000000000000, (), (0b00000000110000000000000000000000))
INST(SUB_64_shifted, "SUB", (Xd, Xn, Xm, shifted_reg),   0b11111111001000000000000000000000, 0b11001011000000000000000000000000, (), (0b00000000110000000000000000000000))
INST(SUBS_64_shifted, "SUBS", (Xd, Xn, Xm, shifted_reg), 0b11111111001000000000000000000000, 0b11101011000000000000000000000000, (), (0b00000000110000000000000000000000))
// Add/subtract (extended register)
INST(ADD_32_extended, "ADD", (Wd_WSP, Wn_WSP, W_extended_reg), 0b11111111111000000000000000000000, 0b00001011001000000000000000000000, (), (0b00000000000000000001100000000000, 0b00000000000000000001010000000000))
INST(ADDS_32_extended, "ADDS", (Wd, Wn_WSP, W_extended_reg),   0b11111111111000000000000000000000, 0b00101011001000000000000000000000, (), (0b00000000000000000001100000000000, 0b00000000000000000001010000000000))
INST(SUB_32_extended, "SUB", (Wd_WSP, Wn_WSP, W_extended_reg), 0b11111111111000000000000000000000, 0b01001011001000000000000000000000, (), (0b00000000000000000001100000000000, 0b00000000000000000001010000000000))
INST(SUBS_32_extended, "SUBS", (Wd, Wn_WSP, W_extended_reg),   0b11111111111000000000000000000000, 0b01101011001000000000000000000000, (), (0b00000000000000000001100000000000, 0b00000000000000000001010000000000))
INST(ADD_64_extended, "ADD", (Xd_SP, Xn_SP, X_extended_reg),   0b11111111111000000000000000000000, 0b10001011001000000000000000000000, (), (0b00000000000000000001100000000000, 0b00000000000000000001010000000000))
INST(ADDS_64_extended, "ADDS", (Xd, Xn_SP, X_extended_reg),    0b11111111111000000000000000000000, 0b10101011001000000000000000000000, (), (0b00000000000000000001100000000000, 0b00000000000000000001010000000000))
INST(SUB_64_extended, "SUB", (Xd_SP, Xn_SP, X_extended_reg),   0b11111111111000000000000000000000, 0b11001011001000000000000000000000, (), (0b00000000000000000001100000000000, 0b00000000000000000001010000000000))
INST(SUBS_64_extended, "SUBS", (Xd, Xn_SP, X_extended_reg),    0b11111111111000000000000000000000, 0b11101011001000000000000000000000, (), (0b00000000000000000001100000000000, 0b00000000000000000001010000000000))
// Add/subtract (with carry)
INST(ADC_32, "ADC", (Wd, Wn, Wm),   0b11111111111000001111110000000000, 0b00011010000000000000000000000000)
INST(ADCS_32, "ADCS", (Wd, Wn, Wm), 0b11111111111000001111110000000000, 0b00111010000000000000000000000000)
INST(SBC_32, "SBC", (Wd, Wn, Wm),   0b11111111111000001111110000000000, 0b01011010000000000000000000000000)
INST(SBCS_32, "SBCS", (Wd, Wn, Wm), 0b11111111111000001111110000000000, 0b01111010000000000000000000000000)
INST(ADC_64, "ADC", (Xd, Xn, Xm),   0b11111111111000001111110000000000, 0b10011010000000000000000000000000)
INST(ADCS_64, "ADCS", (Xd, Xn, Xm), 0b11111111111000001111110000000000, 0b10111010000000000000000000000000)
INST(SBC_64, "SBC", (Xd, Xn, Xm),   0b11111111111000001111110000000000, 0b11011010000000000000000000000000)
INST(SBCS_64, "SBCS", (Xd, Xn, Xm), 0b11111111111000001111110000000000, 0b11111010000000000000000000000000)
// Conditional compare (register)
INST(CCMN_32_reg, "CCMN", (Wn, Wm, cond_comp_flags, cond_comp), 0b11111111111000000000110000010000, 0b00111010010000000000000000000000)
INST(CCMP_32_reg, "CCMP", (Wn, Wm, cond_comp_flags, cond_comp), 0b11111111111000000000110000010000, 0b01111010010000000000000000000000)
INST(CCMN_64_reg, "CCMN", (Xn, Xm, cond_comp_flags, cond_comp), 0b11111111111000000000110000010000, 0b10111010010000000000000000000000)
INST(CCMP_64_reg, "CCMP", (Xn, Xm, cond_comp_flags, cond_comp), 0b11111111111000000000110000010000, 0b11111010010000000000000000000000)
// Conditional compare (immediate)
INST(CCMN_32_imm, "CCMN", (Wn, imm_compare, cond_comp_flags, cond_comp), 0b11111111111000000000110000010000, 0b00111010010000000000100000000000)
INST(CCMP_32_imm, "CCMP", (Wn, imm_compare, cond_comp_flags, cond_comp), 0b11111111111000000000110000010000, 0b01111010010000000000100000000000)
INST(CCMN_64_imm, "CCMN", (Xn, imm_compare, cond_comp_flags, cond_comp), 0b11111111111000000000110000010000, 0b10111010010000000000100000000000)
INST(CCMP_64_imm, "CCMP", (Xn, imm_compare, cond_comp_flags, cond_comp), 0b11111111111000000000110000010000, 0b11111010010000000000100000000000)
// Conditional select
INST(CSEL_32, "CSEL", (Wd, Wn, Wm, cond_comp),   0b11111111111000000000110000000000, 0b00011010100000000000000000000000)
INST(CSINC_32, "CSINC", (Wd, Wn, Wm, cond_comp), 0b11111111111000000000110000000000, 0b00011010100000000000010000000000)
INST(CSINV_32, "CSINV", (Wd, Wn, Wm, cond_comp), 0b11111111111000000000110000000000, 0b01011010100000000000000000000000)
INST(CSNEG_32, "CSNEG", (Wd, Wn, Wm, cond_comp), 0b11111111111000000000110000000000, 0b01011010100000000000010000000000)
INST(CSEL_64, "CSEL", (Xd, Xn, Xm, cond_comp),   0b11111111111000000000110000000000, 0b10011010100000000000000000000000)
INST(CSINC_64, "CSINC", (Xd, Xn, Xm, cond_comp), 0b11111111111000000000110000000000, 0b10011010100000000000010000000000)
INST(CSINV_64, "CSINV", (Xd, Xn, Xm, cond_comp), 0b11111111111000000000110000000000, 0b11011010100000000000000000000000)
INST(CSNEG_64, "CSNEG", (Xd, Xn, Xm, cond_comp), 0b11111111111000000000110000000000, 0b11011010100000000000010000000000)
// Data-processing (3 source)
INST(MADD_32, "MADD", (Wd, Wn, Wm, Wa),  0b11111111111000001000000000000000, 0b00011011000000000000000000000000)
INST(MSUB_32, "MSUB", (Wd, Wn, Wm, Wa),  0b11111111111000001000000000000000, 0b00011011000000001000000000000000)
INST(MADD_64, "MADD", (Xd, Xn, Xm, Xa),  0b11111111111000001000000000000000, 0b10011011000000000000000000000000)
INST(MSUB_64, "MSUB", (Xd, Xn, Xm, Xa),  0b11111111111000001000000000000000, 0b10011011000000001000000000000000)
INST(SMADDL, "SMADDL", (Xd, Wn, Wm, Xa), 0b11111111111000001000000000000000, 0b10011011001000000000000000000000)
INST(SMSUBL, "SMSUBL", (Xd, Wn, Wm, Xa), 0b11111111111000001000000000000000, 0b10011011001000001000000000000000)
INST(SMULH, "SMULH", (Xd, Xn, Xm),       0b11111111111000001000000000000000, 0b10011011010000000000000000000000)
INST(UMADDL, "UMADDL", (Xd, Wn, Wm, Xa), 0b11111111111000001000000000000000, 0b10011011101000000000000000000000)
INST(UMSUBL, "UMSUBL", (Xd, Wn, Wm, Xa), 0b11111111111000001000000000000000, 0b10011011101000001000000000000000)
INST(UMULH, "UMULH", (Xd, Xn, Xm),       0b11111111111000001000000000000000, 0b10011011110000000000000000000000)

// Load Store
// Advanced SIMD load/store multiple structures
INST(ST1_multi_1reg, "ST1", (TODO), 0b10111111111111111111000000000000, 0b00001100000000000111000000000000)
INST(ST1_multi_2reg, "ST1", (TODO), 0b10111111111111111111000000000000, 0b00001100000000001010000000000000)
INST(ST1_multi_3reg, "ST1", (TODO), 0b10111111111111111111000000000000, 0b00001100000000000110000000000000)
INST(ST1_multi_4reg, "ST1", (TODO), 0b10111111111111111111000000000000, 0b00001100000000000010000000000000)
INST(ST2_multi, "ST2", (TODO),      0b10111111111111111111000000000000, 0b00001100000000001000000000000000)
INST(ST3_multi, "ST3", (TODO),      0b10111111111111111111000000000000, 0b00001100000000000100000000000000)
INST(ST4_multi, "ST4", (TODO),      0b10111111111111111111000000000000, 0b00001100000000000000000000000000)
INST(LD1_multi_1reg, "LD1", (TODO), 0b10111111111111111111000000000000, 0b00001100010000000111000000000000)
INST(LD1_multi_2reg, "LD1", (TODO), 0b10111111111111111111000000000000, 0b00001100010000001010000000000000)
INST(LD1_multi_3reg, "LD1", (TODO), 0b10111111111111111111000000000000, 0b00001100010000000110000000000000)
INST(LD1_multi_4reg, "LD1", (TODO), 0b10111111111111111111000000000000, 0b00001100010000000010000000000000)
INST(LD2_multi, "LD2", (TODO),      0b10111111111111111111000000000000, 0b00001100010000001000000000000000)
INST(LD3_multi, "LD3", (TODO),      0b10111111111111111111000000000000, 0b00001100010000000100000000000000)
INST(LD4_multi, "LD4", (TODO),      0b10111111111111111111000000000000, 0b00001100010000000000000000000000)
// Advanced SIMD load/store multiple structures (post-indexed)
INST(ST1_multi_reg_1reg, "ST1", (TODO),    0b10111111111000001111000000000000, 0b00001100100000000111000000000000, (), (0b00000000000111110000000000000000))
INST(ST1_multi_reg_2reg, "ST1", (TODO),    0b10111111111000001111000000000000, 0b00001100100000001010000000000000, (), (0b00000000000111110000000000000000))
INST(ST1_multi_reg_3reg, "ST1", (TODO),    0b10111111111000001111000000000000, 0b00001100100000000110000000000000, (), (0b00000000000111110000000000000000))
INST(ST1_multi_reg_4reg, "ST1", (TODO),    0b10111111111000001111000000000000, 0b00001100100000000010000000000000, (), (0b00000000000111110000000000000000))
INST(ST2_multi_reg, "ST2", (TODO),         0b10111111111000001111000000000000, 0b00001100100000001000000000000000, (), (0b00000000000111110000000000000000))
INST(ST3_multi_reg, "ST3", (TODO),         0b10111111111000001111000000000000, 0b00001100100000000100000000000000, (), (0b00000000000111110000000000000000))
INST(ST4_multi_reg, "ST4", (TODO),         0b10111111111000001111000000000000, 0b00001100100000000000000000000000, (), (0b00000000000111110000000000000000))
INST(ST1_multi_offset_1reg, "ST1", (TODO), 0b10111111111111111111000000000000, 0b00001100100111110111000000000000)
INST(ST1_multi_offset_2reg, "ST1", (TODO), 0b10111111111111111111000000000000, 0b00001100100111111010000000000000)
INST(ST1_multi_offset_3reg, "ST1", (TODO), 0b10111111111111111111000000000000, 0b00001100100111110110000000000000)
INST(ST1_multi_offset_4reg, "ST1", (TODO), 0b10111111111111111111000000000000, 0b00001100100111110010000000000000)
INST(ST2_multi_offset, "ST2", (TODO),      0b10111111111111111111000000000000, 0b00001100100111111000000000000000)
INST(ST3_multi_offset, "ST3", (TODO),      0b10111111111111111111000000000000, 0b00001100100111110100000000000000)
INST(ST4_multi_offset, "ST4", (TODO),      0b10111111111111111111000000000000, 0b00001100100111110000000000000000)
INST(LD1_multi_reg_1reg, "LD1", (TODO),    0b10111111111000001111000000000000, 0b00001100110000000111000000000000, (), (0b00000000000111110000000000000000))
INST(LD1_multi_reg_2reg, "LD1", (TODO),    0b10111111111000001111000000000000, 0b00001100110000001010000000000000, (), (0b00000000000111110000000000000000))
INST(LD1_multi_reg_3reg, "LD1", (TODO),    0b10111111111000001111000000000000, 0b00001100110000000110000000000000, (), (0b00000000000111110000000000000000))
INST(LD1_multi_reg_4reg, "LD1", (TODO),    0b10111111111000001111000000000000, 0b00001100110000000010000000000000, (), (0b00000000000111110000000000000000))
INST(LD2_multi_reg, "LD2", (TODO),         0b10111111111000001111000000000000, 0b00001100110000001000000000000000, (), (0b00000000000111110000000000000000))
INST(LD3_multi_reg, "LD3", (TODO),         0b10111111111000001111000000000000, 0b00001100110000000100000000000000, (), (0b00000000000111110000000000000000))
INST(LD4_multi_reg, "LD4", (TODO),         0b10111111111000001111000000000000, 0b00001100110000000000000000000000, (), (0b00000000000111110000000000000000))
INST(LD1_multi_offset_1reg, "LD1", (TODO), 0b10111111111111111111000000000000, 0b00001100110111110111000000000000)
INST(LD1_multi_offset_2reg, "LD1", (TODO), 0b10111111111111111111000000000000, 0b00001100110111111010000000000000)
INST(LD1_multi_offset_3reg, "LD1", (TODO), 0b10111111111111111111000000000000, 0b00001100110111110110000000000000)
INST(LD1_multi_offset_4reg, "LD1", (TODO), 0b10111111111111111111000000000000, 0b00001100110111110010000000000000)
INST(LD2_multi_offset, "LD2", (TODO),      0b10111111111111111111000000000000, 0b00001100110111111000000000000000)
INST(LD3_multi_offset, "LD3", (TODO),      0b10111111111111111111000000000000, 0b00001100110111110100000000000000)
INST(LD4_multi_offset, "LD4", (TODO),      0b10111111111111111111000000000000, 0b00001100110111110000000000000000)
// Advanced SIMD load/store single structure
INST(ST1_single_8, "ST1", (TODO),  0b10111111111111111110000000000000, 0b00001101000000000000000000000000)
INST(ST1_single_16, "ST1", (TODO), 0b10111111111111111110010000000000, 0b00001101000000000100000000000000)
INST(ST1_single_32, "ST1", (TODO), 0b10111111111111111110110000000000, 0b00001101000000001000000000000000)
INST(ST1_single_64, "ST1", (TODO), 0b10111111111111111111110000000000, 0b00001101000000001000010000000000)
INST(ST2_single_8, "ST2", (TODO),  0b10111111111111111110000000000000, 0b00001101001000000000000000000000)
INST(ST2_single_16, "ST2", (TODO), 0b10111111111111111110010000000000, 0b00001101001000000100000000000000)
INST(ST2_single_32, "ST2", (TODO), 0b10111111111111111110110000000000, 0b00001101001000001000000000000000)
INST(ST2_single_64, "ST2", (TODO), 0b10111111111111111111110000000000, 0b00001101001000001000010000000000)
INST(ST3_single_8, "ST3", (TODO),  0b10111111111111111110000000000000, 0b00001101000000000010000000000000)
INST(ST3_single_16, "ST3", (TODO), 0b10111111111111111110010000000000, 0b00001101000000000110000000000000)
INST(ST3_single_32, "ST3", (TODO), 0b10111111111111111110110000000000, 0b00001101000000001010000000000000)
INST(ST3_single_64, "ST3", (TODO), 0b10111111111111111111110000000000, 0b00001101000000001010010000000000)
INST(ST4_single_8, "ST4", (TODO),  0b10111111111111111110000000000000, 0b00001101001000000010000000000000)
INST(ST4_single_16, "ST4", (TODO), 0b10111111111111111110010000000000, 0b00001101001000000110000000000000)
INST(ST4_single_32, "ST4", (TODO), 0b10111111111111111110110000000000, 0b00001101001000001010000000000000)
INST(ST4_single_64, "ST4", (TODO), 0b10111111111111111111110000000000, 0b00001101001000001010010000000000)
INST(LD1_single_8, "LD1", (TODO),  0b10111111111111111110000000000000, 0b00001101010000000000000000000000)
INST(LD1_single_16, "LD1", (TODO), 0b10111111111111111110010000000000, 0b00001101010000000100000000000000)
INST(LD1_single_32, "LD1", (TODO), 0b10111111111111111110110000000000, 0b00001101010000001000000000000000)
INST(LD1_single_64, "LD1", (TODO), 0b10111111111111111111110000000000, 0b00001101010000001000010000000000)
INST(LD2_single_8, "LD2", (TODO),  0b10111111111111111110000000000000, 0b00001101011000000000000000000000)
INST(LD2_single_16, "LD2", (TODO), 0b10111111111111111110010000000000, 0b00001101011000000100000000000000)
INST(LD2_single_32, "LD2", (TODO), 0b10111111111111111110110000000000, 0b00001101011000001000000000000000)
INST(LD2_single_64, "LD2", (TODO), 0b10111111111111111111110000000000, 0b00001101011000001000010000000000)
INST(LD3_single_8, "LD3", (TODO),  0b10111111111111111110000000000000, 0b00001101010000000010000000000000)
INST(LD3_single_16, "LD3", (TODO), 0b10111111111111111110010000000000, 0b00001101010000000110000000000000)
INST(LD3_single_32, "LD3", (TODO), 0b10111111111111111110110000000000, 0b00001101010000001010000000000000)
INST(LD3_single_64, "LD3", (TODO), 0b10111111111111111111110000000000, 0b00001101010000001010010000000000)
INST(LD4_single_8, "LD4", (TODO),  0b10111111111111111110000000000000, 0b00001101011000000010000000000000)
INST(LD4_single_16, "LD4", (TODO), 0b10111111111111111110010000000000, 0b00001101011000000110000000000000)
INST(LD4_single_32, "LD4", (TODO), 0b10111111111111111110110000000000, 0b00001101011000001010000000000000)
INST(LD4_single_64, "LD4", (TODO), 0b10111111111111111111110000000000, 0b00001101011000001010010000000000)
INST(LD1R, "LD1R", (TODO),         0b10111111111111111111000000000000, 0b00001101010000001100000000000000)
INST(LD2R, "LD2R", (TODO),         0b10111111111111111111000000000000, 0b00001101011000001100000000000000)
INST(LD3R, "LD3R", (TODO),         0b10111111111111111111000000000000, 0b00001101010000001110000000000000)
INST(LD4R, "LD4R", (TODO),         0b10111111111111111111000000000000, 0b00001101011000001110000000000000)
// Advanced SIMD load/store single structure (post-indexed)
INST(ST1_single_8_reg, "ST1", (TODO),  0b10111111111000001110000000000000, 0b00001101100000000000000000000000, (), (0b00000000000111110000000000000000))
INST(ST1_single_16_reg, "ST1", (TODO), 0b10111111111000001110010000000000, 0b00001101100000000100000000000000, (), (0b00000000000111110000000000000000))
INST(ST1_single_32_reg, "ST1", (TODO), 0b10111111111000001110110000000000, 0b00001101100000001000000000000000, (), (0b00000000000111110000000000000000))
INST(ST1_single_64_reg, "ST1", (TODO), 0b10111111111000001111110000000000, 0b00001101100000001000010000000000, (), (0b00000000000111110000000000000000))
INST(ST2_single_8_reg, "ST2", (TODO),  0b10111111111000001110000000000000, 0b00001101101000000000000000000000, (), (0b00000000000111110000000000000000))
INST(ST2_single_16_reg, "ST2", (TODO), 0b10111111111000001110010000000000, 0b00001101101000000100000000000000, (), (0b00000000000111110000000000000000))
INST(ST2_single_32_reg, "ST2", (TODO), 0b10111111111000001110110000000000, 0b00001101101000001000000000000000, (), (0b00000000000111110000000000000000))
INST(ST2_single_64_reg, "ST2", (TODO), 0b10111111111000001111110000000000, 0b00001101101000001000010000000000, (), (0b00000000000111110000000000000000))
INST(ST3_single_8_reg, "ST3", (TODO),  0b10111111111000001110000000000000, 0b00001101100000000010000000000000, (), (0b00000000000111110000000000000000))
INST(ST3_single_16_reg, "ST3", (TODO), 0b10111111111000001110010000000000, 0b00001101100000000110000000000000, (), (0b00000000000111110000000000000000))
INST(ST3_single_32_reg, "ST3", (TODO), 0b10111111111000001110110000000000, 0b00001101100000001010000000000000, (), (0b00000000000111110000000000000000))
INST(ST3_single_64_reg, "ST3", (TODO), 0b10111111111000001111110000000000, 0b00001101100000001010010000000000, (), (0b00000000000111110000000000000000))
INST(ST4_single_8_reg, "ST4", (TODO),  0b10111111111000001110000000000000, 0b00001101101000000010000000000000, (), (0b00000000000111110000000000000000))
INST(ST4_single_16_reg, "ST4", (TODO), 0b10111111111000001110010000000000, 0b00001101101000000110000000000000, (), (0b00000000000111110000000000000000))
INST(ST4_single_32_reg, "ST4", (TODO), 0b10111111111000001110110000000000, 0b00001101101000001010000000000000, (), (0b00000000000111110000000000000000))
INST(ST4_single_64_reg, "ST4", (TODO), 0b10111111111000001111110000000000, 0b00001101101000001010010000000000, (), (0b00000000000111110000000000000000))
INST(ST1_single_8_imm, "ST1", (TODO),  0b10111111111111111110000000000000, 0b00001101100111110000000000000000)
INST(ST1_single_16_imm, "ST1", (TODO), 0b10111111111111111110010000000000, 0b00001101100111110100000000000000)
INST(ST1_single_32_imm, "ST1", (TODO), 0b10111111111111111110110000000000, 0b00001101100111111000000000000000)
INST(ST1_single_64_imm, "ST1", (TODO), 0b10111111111111111111110000000000, 0b00001101100111111000010000000000)
INST(ST2_single_8_imm, "ST2", (TODO),  0b10111111111111111110000000000000, 0b00001101101111110000000000000000)
INST(ST2_single_16_imm, "ST2", (TODO), 0b10111111111111111110010000000000, 0b00001101101111110100000000000000)
INST(ST2_single_32_imm, "ST2", (TODO), 0b10111111111111111110110000000000, 0b00001101101111111000000000000000)
INST(ST2_single_64_imm, "ST2", (TODO), 0b10111111111111111111110000000000, 0b00001101101111111000010000000000)
INST(ST3_single_8_imm, "ST3", (TODO),  0b10111111111111111110000000000000, 0b00001101100111110010000000000000)
INST(ST3_single_16_imm, "ST3", (TODO), 0b10111111111111111110010000000000, 0b00001101100111110110000000000000)
INST(ST3_single_32_imm, "ST3", (TODO), 0b10111111111111111110110000000000, 0b00001101100111111010000000000000)
INST(ST3_single_64_imm, "ST3", (TODO), 0b10111111111111111111110000000000, 0b00001101100111111010010000000000)
INST(ST4_single_8_imm, "ST4", (TODO),  0b10111111111111111110000000000000, 0b00001101101111110010000000000000)
INST(ST4_single_16_imm, "ST4", (TODO), 0b10111111111111111110010000000000, 0b00001101101111110110000000000000)
INST(ST4_single_32_imm, "ST4", (TODO), 0b10111111111111111110110000000000, 0b00001101101111111010000000000000)
INST(ST4_single_64_imm, "ST4", (TODO), 0b10111111111111111111110000000000, 0b00001101101111111010010000000000)
INST(LD1_single_8_reg, "LD1", (TODO),  0b10111111111000001110000000000000, 0b00001101110000000000000000000000, (), (0b00000000000111110000000000000000))
INST(LD1_single_16_reg, "LD1", (TODO), 0b10111111111000001110010000000000, 0b00001101110000000100000000000000, (), (0b00000000000111110000000000000000))
INST(LD1_single_32_reg, "LD1", (TODO), 0b10111111111000001110110000000000, 0b00001101110000001000000000000000, (), (0b00000000000111110000000000000000))
INST(LD1_single_64_reg, "LD1", (TODO), 0b10111111111000001111110000000000, 0b00001101110000001000010000000000, (), (0b00000000000111110000000000000000))
INST(LD2_single_8_reg, "LD2", (TODO),  0b10111111111000001110000000000000, 0b00001101111000000000000000000000, (), (0b00000000000111110000000000000000))
INST(LD2_single_16_reg, "LD2", (TODO), 0b10111111111000001110010000000000, 0b00001101111000000100000000000000, (), (0b00000000000111110000000000000000))
INST(LD2_single_32_reg, "LD2", (TODO), 0b10111111111000001110110000000000, 0b00001101111000001000000000000000, (), (0b00000000000111110000000000000000))
INST(LD2_single_64_reg, "LD2", (TODO), 0b10111111111000001111110000000000, 0b00001101111000001000010000000000, (), (0b00000000000111110000000000000000))
INST(LD3_single_8_reg, "LD3", (TODO),  0b10111111111000001110000000000000, 0b00001101110000000010000000000000, (), (0b00000000000111110000000000000000))
INST(LD3_single_16_reg, "LD3", (TODO), 0b10111111111000001110010000000000, 0b00001101110000000110000000000000, (), (0b00000000000111110000000000000000))
INST(LD3_single_32_reg, "LD3", (TODO), 0b10111111111000001110110000000000, 0b00001101110000001010000000000000, (), (0b00000000000111110000000000000000))
INST(LD3_single_64_reg, "LD3", (TODO), 0b10111111111000001111110000000000, 0b00001101110000001010010000000000, (), (0b00000000000111110000000000000000))
INST(LD4_single_8_reg, "LD4", (TODO),  0b10111111111000001110000000000000, 0b00001101111000000010000000000000, (), (0b00000000000111110000000000000000))
INST(LD4_single_16_reg, "LD4", (TODO), 0b10111111111000001110010000000000, 0b00001101111000000110000000000000, (), (0b00000000000111110000000000000000))
INST(LD4_single_32_reg, "LD4", (TODO), 0b10111111111000001110110000000000, 0b00001101111000001010000000000000, (), (0b00000000000111110000000000000000))
INST(LD4_single_64_reg, "LD4", (TODO), 0b10111111111000001111110000000000, 0b00001101111000001010010000000000, (), (0b00000000000111110000000000000000))
INST(LD1R_reg, "LD1R", (TODO),         0b10111111111000001111000000000000, 0b00001101110000001100000000000000, (), (0b00000000000111110000000000000000))
INST(LD2R_reg, "LD2R", (TODO),         0b10111111111000001111000000000000, 0b00001101111000001100000000000000, (), (0b00000000000111110000000000000000))
INST(LD3R_reg, "LD3R", (TODO),         0b10111111111000001111000000000000, 0b00001101110000001110000000000000, (), (0b00000000000111110000000000000000))
INST(LD4R_reg, "LD4R", (TODO),         0b10111111111000001111000000000000, 0b00001101111000001110000000000000, (), (0b00000000000111110000000000000000))
INST(LD1_single_8_imm, "LD1", (TODO),  0b10111111111111111110000000000000, 0b00001101110111110000000000000000)
INST(LD1_single_16_imm, "LD1", (TODO), 0b10111111111111111110010000000000, 0b00001101110111110100000000000000)
INST(LD1_single_32_imm, "LD1", (TODO), 0b10111111111111111110110000000000, 0b00001101110111111000000000000000)
INST(LD1_single_64_imm, "LD1", (TODO), 0b10111111111111111111110000000000, 0b00001101110111111000010000000000)
INST(LD2_single_8_imm, "LD2", (TODO),  0b10111111111111111110000000000000, 0b00001101111111110000000000000000)
INST(LD2_single_16_imm, "LD2", (TODO), 0b10111111111111111110010000000000, 0b00001101111111110100000000000000)
INST(LD2_single_32_imm, "LD2", (TODO), 0b10111111111111111110110000000000, 0b00001101111111111000000000000000)
INST(LD2_single_64_imm, "LD2", (TODO), 0b10111111111111111111110000000000, 0b00001101111111111000010000000000)
INST(LD3_single_8_imm, "LD3", (TODO),  0b10111111111111111110000000000000, 0b00001101110111110010000000000000)
INST(LD3_single_16_imm, "LD3", (TODO), 0b10111111111111111110010000000000, 0b00001101110111110110000000000000)
INST(LD3_single_32_imm, "LD3", (TODO), 0b10111111111111111110110000000000, 0b00001101110111111010000000000000)
INST(LD3_single_64_imm, "LD3", (TODO), 0b10111111111111111111110000000000, 0b00001101110111111010010000000000)
INST(LD4_single_8_imm, "LD4", (TODO),  0b10111111111111111110000000000000, 0b00001101111111110010000000000000)
INST(LD4_single_16_imm, "LD4", (TODO), 0b10111111111111111110010000000000, 0b00001101111111110110000000000000)
INST(LD4_single_32_imm, "LD4", (TODO), 0b10111111111111111110110000000000, 0b00001101111111111010000000000000)
INST(LD4_single_64_imm, "LD4", (TODO), 0b10111111111111111111110000000000, 0b00001101111111111010010000000000)
INST(LD1R_imm, "LD1R", (TODO),         0b10111111111111111111000000000000, 0b00001101110111111100000000000000)
INST(LD2R_imm, "LD2R", (TODO),         0b10111111111111111111000000000000, 0b00001101111111111100000000000000)
INST(LD3R_imm, "LD3R", (TODO),         0b10111111111111111111000000000000, 0b00001101110111111110000000000000)
INST(LD4R_imm, "LD4R", (TODO),         0b10111111111111111111000000000000, 0b00001101111111111110000000000000)
// Load/store exclusive
INST(STXRB, "STXRB", (Ws, Wt, loadstore_no_off),        0b11111111111000001000000000000000, 0b00001000000000000000000000000000)
INST(STLXRB, "STLXRB", (Ws, Wt, loadstore_no_off),      0b11111111111000001000000000000000, 0b00001000000000001000000000000000)
INST(LDXRB, "LDXRB", (Wt, loadstore_no_off),            0b11111111111000001000000000000000, 0b00001000010000000000000000000000)
INST(LDAXRB, "LDAXRB", (Wt, loadstore_no_off),          0b11111111111000001000000000000000, 0b00001000010000001000000000000000)
INST(STLRB, "STLRB", (Wt, loadstore_no_off),            0b11111111111000001000000000000000, 0b00001000100000001000000000000000)
INST(LDARB, "LDARB", (Wt, loadstore_no_off),            0b11111111111000001000000000000000, 0b00001000110000001000000000000000)
INST(STXRH, "STXRH", (Ws, Wt, loadstore_no_off),        0b11111111111000001000000000000000, 0b01001000000000000000000000000000)
INST(STLXRH, "STLXRH", (Ws, Wt, loadstore_no_off),      0b11111111111000001000000000000000, 0b01001000000000001000000000000000)
INST(LDXRH, "LDXRH", (Wt, loadstore_no_off),            0b11111111111000001000000000000000, 0b01001000010000000000000000000000)
INST(LDAXRH, "LDAXRH", (Wt, loadstore_no_off),          0b11111111111000001000000000000000, 0b01001000010000001000000000000000)
INST(STLRH, "STLRH", (Wt, loadstore_no_off),            0b11111111111000001000000000000000, 0b01001000100000001000000000000000)
INST(LDARH, "LDARH", (Wt, loadstore_no_off),            0b11111111111000001000000000000000, 0b01001000110000001000000000000000)
INST(STXR32, "STXR", (Ws, Wt, loadstore_no_off),        0b11111111111000001000000000000000, 0b10001000000000000000000000000000)
INST(STLXR32, "STLXR", (Ws, Wt, loadstore_no_off),      0b11111111111000001000000000000000, 0b10001000000000001000000000000000)
INST(STXP32, "STXP", (Ws, Wt, Wt2, loadstore_no_off),   0b11111111111000001000000000000000, 0b10001000001000000000000000000000)
INST(STLXP32, "STLXP", (Ws, Wt, Wt2, loadstore_no_off), 0b11111111111000001000000000000000, 0b10001000001000001000000000000000)
INST(LDXR32, "LDXR", (Wt, loadstore_no_off),            0b11111111111000001000000000000000, 0b10001000010000000000000000000000)
INST(LDAXR32, "LDAXR", (Wt, loadstore_no_off),          0b11111111111000001000000000000000, 0b10001000010000001000000000000000)
INST(LDXP32, "LDXP", (Wt, Wt2, loadstore_no_off),       0b11111111111000001000000000000000, 0b10001000011000000000000000000000)
INST(LDAXP32, "LDAXP", (Wt, Wt2, loadstore_no_off),     0b11111111111000001000000000000000, 0b10001000011000001000000000000000)
INST(STLR32, "STLR", (Ws, Wt, loadstore_no_off),        0b11111111111000001000000000000000, 0b10001000100000001000000000000000)
INST(LDAR32, "LDAR", (Wt, loadstore_no_off),            0b11111111111000001000000000000000, 0b10001000110000001000000000000000)
INST(STXR64, "STXR", (Ws, Xt, loadstore_no_off),        0b11111111111000001000000000000000, 0b11001000000000000000000000000000)
INST(STLXR64, "STLXR", (Ws, Xt, loadstore_no_off),      0b11111111111000001000000000000000, 0b11001000000000001000000000000000)
INST(STXP64, "STXP", (Ws, Xt, Xt2, loadstore_no_off),   0b11111111111000001000000000000000, 0b11001000001000000000000000000000)
INST(STLXP64, "STLXP", (Ws, Xt, Xt2, loadstore_no_off), 0b11111111111000001000000000000000, 0b11001000001000001000000000000000)
INST(LDXR64, "LDXR", (Xt, loadstore_no_off),            0b11111111111000001000000000000000, 0b11001000010000000000000000000000)
INST(LDAXR64, "LDAXR", (Xt, loadstore_no_off),          0b11111111111000001000000000000000, 0b11001000010000001000000000000000)
INST(LDXP64, "LDXP", (Xt, Xt2, loadstore_no_off),       0b11111111111000001000000000000000, 0b11001000011000000000000000000000)
INST(LDAXP64, "LDAXP", (Xt, Xt2, loadstore_no_off),     0b11111111111000001000000000000000, 0b11001000011000001000000000000000)
INST(STLR64, "STLR", (Ws, Xt, loadstore_no_off),        0b11111111111000001000000000000000, 0b11001000100000001000000000000000)
INST(LDAR64, "LDAR", (Xt, loadstore_no_off),            0b11111111111000001000000000000000, 0b11001000110000001000000000000000)
// Load register (literal)
INST(LDR32_literal, "LDR", (Wt, label_loadstore),          0b11111111000000000000000000000000, 0b00011000000000000000000000000000)
INST(LDR32_literal_float, "LDR", (St, label_loadstore),    0b11111111000000000000000000000000, 0b00011100000000000000000000000000)
INST(LDR64_literal, "LDR", (Xt, label_loadstore),          0b11111111000000000000000000000000, 0b01011000000000000000000000000000)
INST(LDR64_literal_float, "LDR", (Dt, label_loadstore),    0b11111111000000000000000000000000, 0b01011100000000000000000000000000)
INST(LDRSW_literal, "LDRSW", (Xt, label_loadstore),        0b11111111000000000000000000000000, 0b10011000000000000000000000000000)
INST(LDR128_literal, "LDR", (Qt, label_loadstore),         0b11111111000000000000000000000000, 0b10011100000000000000000000000000)
INST(PRFM_literal, "PRFM", (prefetch_op, label_loadstore), 0b11111111000000000000000000000000, 0b11011000000000000000000000000000)
// Load/store no-allocate pair (offset)
INST(STNP32, "STNP", (Wt, Wt2, loadstore_off_pair_32),       0b11111111110000000000000000000000, 0b00101000000000000000000000000000)
INST(LDNP32, "LDNP", (Wt, Wt2, loadstore_off_pair_32),       0b11111111110000000000000000000000, 0b00101000010000000000000000000000)
INST(STNP32_float, "STNP", (St, St2, loadstore_off_pair_32), 0b11111111110000000000000000000000, 0b00101100000000000000000000000000)
INST(LDNP32_float, "LDNP", (St, St2, loadstore_off_pair_32), 0b11111111110000000000000000000000, 0b00101100010000000000000000000000)
INST(STNP64_float, "STNP", (Dt, Dt2, loadstore_off_pair_64), 0b11111111110000000000000000000000, 0b01101100000000000000000000000000)
INST(LDNP64_float, "LDNP", (Dt, Dt2, loadstore_off_pair_64), 0b11111111110000000000000000000000, 0b01101100010000000000000000000000)
INST(STNP64, "STNP", (Xt, Xt2, loadstore_off_pair_64),       0b11111111110000000000000000000000, 0b10101000000000000000000000000000)
INST(LDNP64, "LDNP", (Xt, Xt2, loadstore_off_pair_64),       0b11111111110000000000000000000000, 0b10101000010000000000000000000000)
INST(STNP128, "STNP", (Qt, Qt2, loadstore_off_pair_128),     0b11111111110000000000000000000000, 0b10101100000000000000000000000000)
INST(LDNP128, "LDNP", (Qt, Qt2, loadstore_off_pair_128),     0b11111111110000000000000000000000, 0b10101100010000000000000000000000)
// Load/store register pair (post-indexed)
INST(STP32_post, "STP", (Wt, Wt2, loadstore_post_off_pair_32),       0b11111111110000000000000000000000, 0b00101000100000000000000000000000)
INST(LDP32_post, "LDP", (Wt, Wt2, loadstore_post_off_pair_32),       0b11111111110000000000000000000000, 0b00101000110000000000000000000000)
INST(STP32_post_float, "STP", (St, St2, loadstore_post_off_pair_32), 0b11111111110000000000000000000000, 0b00101100100000000000000000000000)
INST(LDP32_post_float, "LDP", (St, St2, loadstore_post_off_pair_32), 0b11111111110000000000000000000000, 0b00101100110000000000000000000000)
INST(LDPSW_post, "LDPSW", (Xt, Xt2, loadstore_post_off_pair_64),     0b11111111110000000000000000000000, 0b01101000110000000000000000000000)
INST(STP64_post_float, "STP", (Dt, Dt2, loadstore_post_off_pair_64), 0b11111111110000000000000000000000, 0b01101100100000000000000000000000)
INST(LDP64_post_float, "LDP", (Dt, Dt2, loadstore_post_off_pair_64), 0b11111111110000000000000000000000, 0b01101100110000000000000000000000)
INST(STP64_post, "STP", (Xt, Xt2, loadstore_post_off_pair_64),       0b11111111110000000000000000000000, 0b10101000100000000000000000000000)
INST(LDP64_post, "LDP", (Xt, Xt2, loadstore_post_off_pair_64),       0b11111111110000000000000000000000, 0b10101000110000000000000000000000)
INST(STP128_post, "STP", (Qt, Qt2, loadstore_post_off_pair_128),     0b11111111110000000000000000000000, 0b10101100100000000000000000000000)
INST(LDP128_post, "LDP", (Qt, Qt2, loadstore_post_off_pair_128),     0b11111111110000000000000000000000, 0b10101100110000000000000000000000)
// Load/store register pair (offset)
INST(STP32_offset, "STP", (Wt, Wt2, loadstore_off_pair_32),       0b11111111110000000000000000000000, 0b00101001000000000000000000000000)
INST(LDP32_offset, "LDP", (Wt, Wt2, loadstore_off_pair_32),       0b11111111110000000000000000000000, 0b00101001010000000000000000000000)
INST(STP32_offset_float, "STP", (St, St2, loadstore_off_pair_32), 0b11111111110000000000000000000000, 0b00101101000000000000000000000000)
INST(LDP32_offset_float, "LDP", (St, St2, loadstore_off_pair_32), 0b11111111110000000000000000000000, 0b00101101010000000000000000000000)
INST(LDPSW_offset, "LDPSW", (Xt, Xt2, loadstore_off_pair_32),     0b11111111110000000000000000000000, 0b01101001010000000000000000000000)
INST(STP64_offset_float, "STP", (Dt, Dt2, loadstore_off_pair_64), 0b11111111110000000000000000000000, 0b01101101000000000000000000000000)
INST(LDP64_offset_float, "LDP", (Dt, Dt2, loadstore_off_pair_64), 0b11111111110000000000000000000000, 0b01101101010000000000000000000000)
INST(STP64_offset, "STP", (Xt, Xt2, loadstore_off_pair_64),       0b11111111110000000000000000000000, 0b10101001000000000000000000000000)
INST(LDP64_offset, "LDP", (Xt, Xt2, loadstore_off_pair_64),       0b11111111110000000000000000000000, 0b10101001010000000000000000000000)
INST(STP128_offset, "STP", (Qt, Qt2, loadstore_off_pair_128),     0b11111111110000000000000000000000, 0b10101101000000000000000000000000)
INST(LDP128_offset, "LDP", (Qt, Qt2, loadstore_off_pair_128),     0b11111111110000000000000000000000, 0b10101101010000000000000000000000)
// Load/store register pair (pre-indexed)
INST(STP32_pre, "STP", (Wt, Wt2, loadstore_pre_off_pair_32),       0b11111111110000000000000000000000, 0b00101001100000000000000000000000)
INST(LDP32_pre, "LDP", (Wt, Wt2, loadstore_pre_off_pair_32),       0b11111111110000000000000000000000, 0b00101001110000000000000000000000)
INST(STP32_pre_float, "STP", (St, St2, loadstore_pre_off_pair_32), 0b11111111110000000000000000000000, 0b00101101100000000000000000000000)
INST(LDP32_pre_float, "LDP", (St, St2, loadstore_pre_off_pair_32), 0b11111111110000000000000000000000, 0b00101101110000000000000000000000)
INST(LDPSW_pre, "LDPSW", (Xt, Xt2, loadstore_pre_off_pair_64),     0b11111111110000000000000000000000, 0b01101001110000000000000000000000)
INST(STP64_pre_float, "STP", (Dt, Dt2, loadstore_pre_off_pair_64), 0b11111111110000000000000000000000, 0b01101101100000000000000000000000)
INST(LDP64_pre_float, "LDP", (Dt, Dt2, loadstore_pre_off_pair_64), 0b11111111110000000000000000000000, 0b01101101110000000000000000000000)
INST(STP64_pre, "STP", (Xt, Xt2, loadstore_pre_off_pair_64),       0b11111111110000000000000000000000, 0b10101001100000000000000000000000)
INST(LDP64_pre, "LDP", (Xt, Xt2, loadstore_pre_off_pair_64),       0b11111111110000000000000000000000, 0b10101001110000000000000000000000)
INST(STP128_pre, "STP", (Qt, Qt2, loadstore_pre_off_pair_128),     0b11111111110000000000000000000000, 0b10101101100000000000000000000000)
INST(LDP128_pre, "LDP", (Qt, Qt2, loadstore_pre_off_pair_128),     0b11111111110000000000000000000000, 0b10101101110000000000000000000000)
// Load/store register (unscaled immediate)
INST(STURB, "STURB", (Wt, loadstore_unscaled_off),                 0b11111111111000000000110000000000, 0b00111000000000000000000000000000)
INST(LDURB, "LDURB", (Wt, loadstore_unscaled_off),                 0b11111111111000000000110000000000, 0b00111000010000000000000000000000)
INST(LDURSB64, "LDURSB", (Xt, loadstore_unscaled_off),             0b11111111111000000000110000000000, 0b00111000100000000000000000000000)
INST(LDURSB32, "LDURSB", (Wt, loadstore_unscaled_off),             0b11111111111000000000110000000000, 0b00111000110000000000000000000000)
INST(STUR8_float, "STUR", (Bt, loadstore_unscaled_off),            0b11111111111000000000110000000000, 0b00111100000000000000000000000000)
INST(LDUR8_float, "LDUR", (Bt, loadstore_unscaled_off),            0b11111111111000000000110000000000, 0b00111100010000000000000000000000)
INST(STUR128, "STUR", (Qt, loadstore_unscaled_off),                0b11111111111000000000110000000000, 0b00111100100000000000000000000000)
INST(LDUR128, "LDUR", (Qt, loadstore_unscaled_off),                0b11111111111000000000110000000000, 0b00111100110000000000000000000000)
INST(STURH, "STURH", (Wt, loadstore_unscaled_off),                 0b11111111111000000000110000000000, 0b01111000000000000000000000000000)
INST(LDURH, "LDURH", (Wt, loadstore_unscaled_off),                 0b11111111111000000000110000000000, 0b01111000010000000000000000000000)
INST(LDURSH64, "LDURSH", (Xt, loadstore_unscaled_off),             0b11111111111000000000110000000000, 0b01111000100000000000000000000000)
INST(LDURSH32, "LDURSH", (Wt, loadstore_unscaled_off),             0b11111111111000000000110000000000, 0b01111000110000000000000000000000)
INST(STUR16_float, "STUR", (Ht, loadstore_unscaled_off),           0b11111111111000000000110000000000, 0b01111100000000000000000000000000)
INST(LDUR16_float, "LDUR", (Ht, loadstore_unscaled_off),           0b11111111111000000000110000000000, 0b01111100010000000000000000000000)
INST(STUR32, "STUR", (Wt, loadstore_unscaled_off),                 0b11111111111000000000110000000000, 0b10111000000000000000000000000000)
INST(LDUR32, "LDUR", (Wt, loadstore_unscaled_off),                 0b11111111111000000000110000000000, 0b10111000010000000000000000000000)
INST(LDURSW, "LDURSW", (Xt, loadstore_unscaled_off),               0b11111111111000000000110000000000, 0b10111000100000000000000000000000)
INST(STUR32_float, "STUR", (St, loadstore_unscaled_off),           0b11111111111000000000110000000000, 0b10111100000000000000000000000000)
INST(LDUR32_float, "LDUR", (St, loadstore_unscaled_off),           0b11111111111000000000110000000000, 0b10111100010000000000000000000000)
INST(STUR64, "STUR", (Xt, loadstore_unscaled_off),                 0b11111111111000000000110000000000, 0b11111000000000000000000000000000)
INST(LDUR64, "LDUR", (Xt, loadstore_unscaled_off),                 0b11111111111000000000110000000000, 0b11111000010000000000000000000000)
INST(PRFM_unscaled, "PRFM", (prefetch_op, loadstore_unscaled_off), 0b11111111111000000000110000000000, 0b11111000100000000000000000000000)
INST(STUR64_float, "STUR", (Dt, loadstore_unscaled_off),           0b11111111111000000000110000000000, 0b11111100000000000000000000000000)
INST(LDUR64_float, "LDUR", (Dt, loadstore_unscaled_off),           0b11111111111000000000110000000000, 0b11111100010000000000000000000000)
// Load/store register (immediate post-indexed)
INST(STRB_post, "STRB", (Wt, loadstore_post_off),       0b11111111111000000000110000000000, 0b00111000000000000000010000000000)
INST(LDRB_post, "LDRB", (Wt, loadstore_post_off),       0b11111111111000000000110000000000, 0b00111000010000000000010000000000)
INST(LDRSB64_post, "LDRSB", (Xt, loadstore_post_off),   0b11111111111000000000110000000000, 0b00111000100000000000010000000000)
INST(LDRSB32_post, "LDRSB", (Wt, loadstore_post_off),   0b11111111111000000000110000000000, 0b00111000110000000000010000000000)
INST(STR8_post_float, "STR", (Bt, loadstore_post_off),  0b11111111111000000000110000000000, 0b00111100000000000000010000000000)
INST(LDR8_post_float, "LDR", (Bt, loadstore_post_off),  0b11111111111000000000110000000000, 0b00111100010000000000010000000000)
INST(STR128_post, "STR", (Qt, loadstore_post_off),      0b11111111111000000000110000000000, 0b00111100100000000000010000000000)
INST(LDR128_post, "LDR", (Qt, loadstore_post_off),      0b11111111111000000000110000000000, 0b00111100110000000000010000000000)
INST(STRH_post, "STRH", (Wt, loadstore_post_off),       0b11111111111000000000110000000000, 0b01111000000000000000010000000000)
INST(LDRH_post, "LDRH", (Wt, loadstore_post_off),       0b11111111111000000000110000000000, 0b01111000010000000000010000000000)
INST(LDRSH64_post, "LDRSH", (Xt, loadstore_post_off),   0b11111111111000000000110000000000, 0b01111000100000000000010000000000)
INST(LDRSH32_post, "LDRSH", (Wt, loadstore_post_off),   0b11111111111000000000110000000000, 0b01111000110000000000010000000000)
INST(STR16_post_float, "STR", (Ht, loadstore_post_off), 0b11111111111000000000110000000000, 0b01111100000000000000010000000000)
INST(LDR16_post_float, "LDR", (Ht, loadstore_post_off), 0b11111111111000000000110000000000, 0b01111100010000000000010000000000)
INST(STR32_post, "STR", (Wt, loadstore_post_off),       0b11111111111000000000110000000000, 0b10111000000000000000010000000000)
INST(LDR32_post, "LDR", (Wt, loadstore_post_off),       0b11111111111000000000110000000000, 0b10111000010000000000010000000000)
INST(LDRSW_post, "LDRSW", (Xt, loadstore_post_off),     0b11111111111000000000110000000000, 0b10111000100000000000010000000000)
INST(STR32_post_float, "STR", (St, loadstore_post_off), 0b11111111111000000000110000000000, 0b10111100000000000000010000000000)
INST(LDR32_post_float, "LDR", (St, loadstore_post_off), 0b11111111111000000000110000000000, 0b10111100010000000000010000000000)
INST(STR64_post, "STR", (Xt, loadstore_post_off),       0b11111111111000000000110000000000, 0b11111000000000000000010000000000)
INST(LDR64_post, "LDR", (Xt, loadstore_post_off),       0b11111111111000000000110000000000, 0b11111000010000000000010000000000)
INST(STR64_post_float, "STR", (Dt, loadstore_post_off), 0b11111111111000000000110000000000, 0b11111100000000000000010000000000)
INST(LDR64_post_float, "LDR", (Dt, loadstore_post_off), 0b11111111111000000000110000000000, 0b11111100010000000000010000000000)
// Load/store register (unprivileged)
INST(STTRB, "STTRB", (Wt, loadstore_unscaled_off),     0b11111111111000000000110000000000, 0b00111000000000000000100000000000)
INST(LDTRB, "LDTRB", (Wt, loadstore_unscaled_off),     0b11111111111000000000110000000000, 0b00111000010000000000100000000000)
INST(LDTRSB64, "LDTRSB", (Xt, loadstore_unscaled_off), 0b11111111111000000000110000000000, 0b00111000100000000000100000000000)
INST(LDTRSB32, "LDTRSB", (Wt, loadstore_unscaled_off), 0b11111111111000000000110000000000, 0b00111000110000000000100000000000)
INST(STTRH, "STTRH", (Wt, loadstore_unscaled_off),     0b11111111111000000000110000000000, 0b01111000000000000000100000000000)
INST(LDTRH, "LDTRH", (Wt, loadstore_unscaled_off),     0b11111111111000000000110000000000, 0b01111000010000000000100000000000)
INST(LDTRSH64, "LDTRSH", (Xt, loadstore_unscaled_off), 0b11111111111000000000110000000000, 0b01111000100000000000100000000000)
INST(LDTRSH32, "LDTRSH", (Wt, loadstore_unscaled_off), 0b11111111111000000000110000000000, 0b01111000110000000000100000000000)
INST(STTR32, "STTR", (Wt, loadstore_unscaled_off),     0b11111111111000000000110000000000, 0b10111000000000000000100000000000)
INST(LDTR32, "LDTR", (Wt, loadstore_unscaled_off),     0b11111111111000000000110000000000, 0b10111000010000000000100000000000)
INST(LDTRSW, "LDTRSW", (Xt, loadstore_unscaled_off),   0b11111111111000000000110000000000, 0b10111000100000000000100000000000)
INST(STTR64, "STTR", (Xt, loadstore_unscaled_off),     0b11111111111000000000110000000000, 0b11111000000000000000100000000000)
INST(LDTR64, "LDTR", (Xt, loadstore_unscaled_off),     0b11111111111000000000110000000000, 0b11111000010000000000100000000000)
// Load/store register (immediate pre-indexed)
INST(STRB_pre, "STRB", (Wt, loadstore_pre_off),       0b11111111111000000000110000000000, 0b00111000000000000000110000000000)
INST(LDRB_pre, "LDRB", (Wt, loadstore_pre_off),       0b11111111111000000000110000000000, 0b00111000010000000000110000000000)
INST(LDRSB64_pre, "LDRSB", (Xt, loadstore_pre_off),   0b11111111111000000000110000000000, 0b00111000100000000000110000000000)
INST(LDRSB32_pre, "LDRSB", (Wt, loadstore_pre_off),   0b11111111111000000000110000000000, 0b00111000110000000000110000000000)
INST(STR8_pre_float, "STR", (Bt, loadstore_pre_off),  0b11111111111000000000110000000000, 0b00111100000000000000110000000000)
INST(LDR8_pre_float, "LDR", (Bt, loadstore_pre_off),  0b11111111111000000000110000000000, 0b00111100010000000000110000000000)
INST(STR128_pre, "STR", (Qt, loadstore_pre_off),      0b11111111111000000000110000000000, 0b00111100100000000000110000000000)
INST(LDR128_pre, "LDR", (Qt, loadstore_pre_off),      0b11111111111000000000110000000000, 0b00111100110000000000110000000000)
INST(STRH_pre, "STRH", (Wt, loadstore_pre_off),       0b11111111111000000000110000000000, 0b01111000000000000000110000000000)
INST(LDRH_pre, "LDRH", (Wt, loadstore_pre_off),       0b11111111111000000000110000000000, 0b01111000010000000000110000000000)
INST(LDRSH64_pre, "LDRSH", (Xt, loadstore_pre_off),   0b11111111111000000000110000000000, 0b01111000100000000000110000000000)
INST(LDRSH32_pre, "LDRSH", (Wt, loadstore_pre_off),   0b11111111111000000000110000000000, 0b01111000110000000000110000000000)
INST(STR16_pre_float, "STR", (Ht, loadstore_pre_off), 0b11111111111000000000110000000000, 0b01111100000000000000110000000000)
INST(LDR16_pre_float, "LDR", (Ht, loadstore_pre_off), 0b11111111111000000000110000000000, 0b01111100010000000000110000000000)
INST(STR32_pre, "STR", (Wt, loadstore_pre_off),       0b11111111111000000000110000000000, 0b10111000000000000000110000000000)
INST(LDR32_pre, "LDR", (Wt, loadstore_pre_off),       0b11111111111000000000110000000000, 0b10111000010000000000110000000000)
INST(LDRSW_pre, "LDRSW", (Xt, loadstore_pre_off),     0b11111111111000000000110000000000, 0b10111000100000000000110000000000)
INST(STR32_pre_float, "STR", (St, loadstore_pre_off), 0b11111111111000000000110000000000, 0b10111100000000000000110000000000)
INST(LDR32_pre_float, "LDR", (St, loadstore_pre_off), 0b11111111111000000000110000000000, 0b10111100010000000000110000000000)
INST(STR64_pre, "STR", (Xt, loadstore_pre_off),       0b11111111111000000000110000000000, 0b11111000000000000000110000000000)
INST(LDR64_pre, "LDR", (Xt, loadstore_pre_off),       0b11111111111000000000110000000000, 0b11111000010000000000110000000000)
INST(STR64_pre_float, "STR", (Dt, loadstore_pre_off), 0b11111111111000000000110000000000, 0b11111100000000000000110000000000)
INST(LDR64_pre_float, "LDR", (Dt, loadstore_pre_off), 0b11111111111000000000110000000000, 0b11111100010000000000110000000000)
// Load/store register (register offset)
// TODO different enums for different shift types?
INST(STRB_reg, "STRB", (Wt, loadstore_reg),          0b11111111111000000000110000000000, 0b00111000001000000000100000000000)
INST(LDRB_reg, "LDRB", (Wt, loadstore_reg),          0b11111111111000000000110000000000, 0b00111000011000000000100000000000)
INST(LDRSB64_reg, "LDRSB", (Xt, loadstore_reg),      0b11111111111000000000110000000000, 0b00111000101000000000100000000000)
INST(LDRSB32_reg, "LDRSB", (Wt, loadstore_reg),      0b11111111111000000000110000000000, 0b00111000111000000000100000000000)
INST(STR8_reg_float, "STR", (Bt, loadstore_reg),     0b11111111111000000000110000000000, 0b00111100001000000000100000000000)
INST(LDR8_reg_float, "LDR", (Bt, loadstore_reg),     0b11111111111000000000110000000000, 0b00111100011000000000100000000000)
INST(STR128_reg, "STR", (Qt, loadstore_reg),         0b11111111111000000000110000000000, 0b00111100101000000000100000000000)
INST(LDR128_reg, "LDR", (Qt, loadstore_reg),         0b11111111111000000000110000000000, 0b00111100111000000000100000000000)
INST(STRH_reg, "STRH", (Wt, loadstore_reg),          0b11111111111000000000110000000000, 0b01111000001000000000100000000000)
INST(LDRH_reg, "LDRH", (Wt, loadstore_reg),          0b11111111111000000000110000000000, 0b01111000011000000000100000000000)
INST(LDRSH64_reg, "LDRSH", (Xt, loadstore_reg),      0b11111111111000000000110000000000, 0b01111000101000000000100000000000)
INST(LDRSH32_reg, "LDRSH", (Wt, loadstore_reg),      0b11111111111000000000110000000000, 0b01111000111000000000100000000000)
INST(STR16_reg_float, "STR", (Ht, loadstore_reg),    0b11111111111000000000110000000000, 0b01111100001000000000100000000000)
INST(LDR16_reg_float, "LDR", (Ht, loadstore_reg),    0b11111111111000000000110000000000, 0b01111100011000000000100000000000)
INST(STR32_reg, "STR", (Wt, loadstore_reg),          0b11111111111000000000110000000000, 0b10111000001000000000100000000000)
INST(LDR32_reg, "LDR", (Wt, loadstore_reg),          0b11111111111000000000110000000000, 0b10111000011000000000100000000000)
INST(LDRSW_reg, "LDRSW", (Xt, loadstore_reg),        0b11111111111000000000110000000000, 0b10111000101000000000100000000000)
INST(STR32_reg_float, "STR", (St, loadstore_reg),    0b11111111111000000000110000000000, 0b10111100001000000000100000000000)
INST(LDR32_reg_float, "LDR", (St, loadstore_reg),    0b11111111111000000000110000000000, 0b10111100011000000000100000000000)
INST(STR64_reg, "STR", (Xt, loadstore_reg),          0b11111111111000000000110000000000, 0b11111000001000000000100000000000)
INST(LDR64_reg, "LDR", (Xt, loadstore_reg),          0b11111111111000000000110000000000, 0b11111000011000000000100000000000)
INST(PRFM_reg, "PRFM", (prefetch_op, loadstore_reg), 0b11111111111000000000110000000000, 0b11111000101000000000100000000000)
INST(STR64_reg_float, "STR", (Dt, loadstore_reg),    0b11111111111000000000110000000000, 0b11111100001000000000100000000000)
INST(LDR64_reg_float, "LDR", (Dt, loadstore_reg),    0b11111111111000000000110000000000, 0b11111100011000000000100000000000)
// Load/store register (unsigned immediate)
INST(STRB_imm, "STRB", (Wt, loadstore_unsigned_off_8),           0b11111111110000000000000000000000, 0b00111001000000000000000000000000)
INST(LDRB_imm, "LDRB", (Wt, loadstore_unsigned_off_8),           0b11111111110000000000000000000000, 0b00111001010000000000000000000000)
INST(LDRSB64_imm, "LDRSB", (Xt, loadstore_unsigned_off_8),       0b11111111110000000000000000000000, 0b00111001100000000000000000000000)
INST(LDRSB32_imm, "LDRSB", (Wt, loadstore_unsigned_off_8),       0b11111111110000000000000000000000, 0b00111001110000000000000000000000)
INST(STR8_imm_float, "STR", (Bt, loadstore_unsigned_off_8),      0b11111111110000000000000000000000, 0b00111101000000000000000000000000)
INST(LDR8_imm_float, "LDR", (Bt, loadstore_unsigned_off_8),      0b11111111110000000000000000000000, 0b00111101010000000000000000000000)
INST(STR128_imm, "STR", (Qt, loadstore_unsigned_off_128),        0b11111111110000000000000000000000, 0b00111101100000000000000000000000)
INST(LDR128_imm, "LDR", (Qt, loadstore_unsigned_off_128),        0b11111111110000000000000000000000, 0b00111101110000000000000000000000)
INST(STRH_imm, "STRH", (Wt, loadstore_unsigned_off_16),          0b11111111110000000000000000000000, 0b01111001000000000000000000000000)
INST(LDRH_imm, "LDRH", (Wt, loadstore_unsigned_off_16),          0b11111111110000000000000000000000, 0b01111001010000000000000000000000)
INST(LDRSH64_imm, "LDRSH", (Xt, loadstore_unsigned_off_16),      0b11111111110000000000000000000000, 0b01111001100000000000000000000000)
INST(LDRSH32_imm, "LDRSH", (Wt, loadstore_unsigned_off_16),      0b11111111110000000000000000000000, 0b01111001110000000000000000000000)
INST(STR16_imm_float, "STR", (Ht, loadstore_unsigned_off_16),    0b11111111110000000000000000000000, 0b01111101000000000000000000000000)
INST(LDR16_imm_float, "LDR", (Ht, loadstore_unsigned_off_16),    0b11111111110000000000000000000000, 0b01111101010000000000000000000000)
INST(STR32_imm, "STR", (Wt, loadstore_unsigned_off_32),          0b11111111110000000000000000000000, 0b10111001000000000000000000000000)
INST(LDR32_imm, "LDR", (Wt, loadstore_unsigned_off_32),          0b11111111110000000000000000000000, 0b10111001010000000000000000000000)
INST(LDRSW_imm, "LDRSW", (Xt, loadstore_unsigned_off_32),        0b11111111110000000000000000000000, 0b10111001100000000000000000000000)
INST(STR32_imm_float, "STR", (St, loadstore_unsigned_off_32),    0b11111111110000000000000000000000, 0b10111101000000000000000000000000)
INST(LDR32_imm_float, "LDR", (St, loadstore_unsigned_off_32),    0b11111111110000000000000000000000, 0b10111101010000000000000000000000)
INST(STR64_imm, "STR", (Xt, loadstore_unsigned_off_64),          0b11111111110000000000000000000000, 0b11111001000000000000000000000000)
INST(LDR64_imm, "LDR", (Xt, loadstore_unsigned_off_64),          0b11111111110000000000000000000000, 0b11111001010000000000000000000000)
INST(PRFM_imm, "PRFM", (prefetch_op, loadstore_unsigned_off_64), 0b11111111110000000000000000000000, 0b11111001100000000000000000000000)
INST(STR64_imm_float, "STR", (Dt, loadstore_unsigned_off_64),    0b11111111110000000000000000000000, 0b11111101000000000000000000000000)
INST(LDR64_imm_float, "LDR", (Dt, loadstore_unsigned_off_64),    0b11111111110000000000000000000000, 0b11111101010000000000000000000000)

// Float
// Conversion between floating-point and fixed-point
INST(SCVTF_32_single_fixed, "SCVTF", (TODO),   0b11111111111111110000000000000000, 0b00011110000000100000000000000000)
INST(UCVTF_32_single_fixed, "UCVTF", (TODO),   0b11111111111111110000000000000000, 0b00011110000000110000000000000000)
INST(FCVTZS_single_32_fixed, "FCVTZS", (TODO), 0b11111111111111110000000000000000, 0b00011110000110000000000000000000)
INST(FCVTZU_single_32_fixed, "FCVTZU", (TODO), 0b11111111111111110000000000000000, 0b00011110000110010000000000000000)
INST(SCVTF_32_double_fixed, "SCVTF", (TODO),   0b11111111111111110000000000000000, 0b00011110010000100000000000000000)
INST(UCVTF_32_double_fixed, "UCVTF", (TODO),   0b11111111111111110000000000000000, 0b00011110010000110000000000000000)
INST(FCVTZS_double_32_fixed, "FCVTZS", (TODO), 0b11111111111111110000000000000000, 0b00011110010110000000000000000000)
INST(FCVTZU_double_32_fixed, "FCVTZU", (TODO), 0b11111111111111110000000000000000, 0b00011110010110010000000000000000)
INST(SCVTF_64_single_fixed, "SCVTF", (TODO),   0b11111111111111110000000000000000, 0b10011110000000100000000000000000)
INST(UCVTF_64_single_fixed, "UCVTF", (TODO),   0b11111111111111110000000000000000, 0b10011110000000110000000000000000)
INST(FCVTZS_single_64_fixed, "FCVTZS", (TODO), 0b11111111111111110000000000000000, 0b10011110000110000000000000000000)
INST(FCVTZU_single_64_fixed, "FCVTZU", (TODO), 0b11111111111111110000000000000000, 0b10011110000110010000000000000000)
INST(SCVTF_64_double_fixed, "SCVTF", (TODO),   0b11111111111111110000000000000000, 0b10011110010000100000000000000000)
INST(UCVTF_64_double_fixed, "UCVTF", (TODO),   0b11111111111111110000000000000000, 0b10011110010000110000000000000000)
INST(FCVTZS_double_64_fixed, "FCVTZS", (TODO), 0b11111111111111110000000000000000, 0b10011110010110000000000000000000)
INST(FCVTZU_double_64_fixed, "FCVTZU", (TODO), 0b11111111111111110000000000000000, 0b10011110010110010000000000000000)
// Conversion between floating-point and integer
INST(FCVTNS_single_32_int, "FCVTNS", (Wd, Sn), 0b11111111111111111111110000000000, 0b00011110001000000000000000000000)
INST(FCVTNU_single_32_int, "FCVTNU", (Wd, Sn), 0b11111111111111111111110000000000, 0b00011110001000010000000000000000)
INST(SCVTF_32_single_int, "SCVTF", (Sd, Wn),   0b11111111111111111111110000000000, 0b00011110001000100000000000000000)
INST(UCVTF_32_single_int, "UCVTF", (Sd, Wn),   0b11111111111111111111110000000000, 0b00011110001000110000000000000000)
INST(FCVTAS_single_32_int, "FCVTAS", (Wd, Sn), 0b11111111111111111111110000000000, 0b00011110001001000000000000000000)
INST(FCVTAU_single_32_int, "FCVTAU", (Wd, Sn), 0b11111111111111111111110000000000, 0b00011110001001010000000000000000)
INST(FMOV_single_32, "FMOV", (Wd, Sn),         0b11111111111111111111110000000000, 0b00011110001001100000000000000000)
INST(FMOV_32_single, "FMOV", (Sd, Wn),         0b11111111111111111111110000000000, 0b00011110001001110000000000000000)
INST(FCVTPS_single_32_int, "FCVTPS", (Wd, Sn), 0b11111111111111111111110000000000, 0b00011110001010000000000000000000)
INST(FCVTPU_single_32_int, "FCVTPU", (Wd, Sn), 0b11111111111111111111110000000000, 0b00011110001010010000000000000000)
INST(FCVTMS_single_32_int, "FCVTMS", (Wd, Sn), 0b11111111111111111111110000000000, 0b00011110001100000000000000000000)
INST(FCVTMU_single_32_int, "FCVTMU", (Wd, Sn), 0b11111111111111111111110000000000, 0b00011110001100010000000000000000)
INST(FCVTZS_single_32_int, "FCVTZS", (Wd, Sn), 0b11111111111111111111110000000000, 0b00011110001110000000000000000000)
INST(FCVTZU_single_32_int, "FCVTZU", (Wd, Sn), 0b11111111111111111111110000000000, 0b00011110001110010000000000000000)
INST(FCVTNS_double_32_int, "FCVTNS", (Wd, Dn), 0b11111111111111111111110000000000, 0b00011110011000000000000000000000)
INST(FCVTNU_double_32_int, "FCVTNU", (Wd, Dn), 0b11111111111111111111110000000000, 0b00011110011000010000000000000000)
INST(SCVTF_32_double_int, "SCVTF", (Dd, Wn),   0b11111111111111111111110000000000, 0b00011110011000100000000000000000)
INST(UCVTF_32_double_int, "UCVTF", (Dd, Wn),   0b11111111111111111111110000000000, 0b00011110011000110000000000000000)
INST(FCVTAS_double_32_int, "FCVTAS", (Wd, Dn), 0b11111111111111111111110000000000, 0b00011110011001000000000000000000)
INST(FCVTAU_double_32_int, "FCVTAU", (Wd, Dn), 0b11111111111111111111110000000000, 0b00011110011001010000000000000000)
INST(FCVTPS_double_32_int, "FCVTPS", (Wd, Dn), 0b11111111111111111111110000000000, 0b00011110011010000000000000000000)
INST(FCVTPU_double_32_int, "FCVTPU", (Wd, Dn), 0b11111111111111111111110000000000, 0b00011110011010010000000000000000)
INST(FCVTMS_double_32_int, "FCVTMS", (Wd, Dn), 0b11111111111111111111110000000000, 0b00011110011100000000000000000000)
INST(FCVTMU_double_32_int, "FCVTMU", (Wd, Dn), 0b11111111111111111111110000000000, 0b00011110011100010000000000000000)
INST(FCVTZS_double_32_int, "FCVTZS", (Wd, Dn), 0b11111111111111111111110000000000, 0b00011110011110000000000000000000)
INST(FCVTZU_double_32_int, "FCVTZU", (Wd, Dn), 0b11111111111111111111110000000000, 0b00011110011110010000000000000000)
INST(FCVTNS_single_64_int, "FCVTNS", (Xd, Sn), 0b11111111111111111111110000000000, 0b10011110001000000000000000000000)
INST(FCVTNU_single_64_int, "FCVTNU", (Xd, Sn), 0b11111111111111111111110000000000, 0b10011110001000010000000000000000)
INST(SCVTF_64_single_int, "SCVTF", (Sd, Xn),   0b11111111111111111111110000000000, 0b10011110001000100000000000000000)
INST(UCVTF_64_single_int, "UCVTF", (Sd, Xn),   0b11111111111111111111110000000000, 0b10011110001000110000000000000000)
INST(FCVTAS_single_64_int, "FCVTAS", (Xd, Sn), 0b11111111111111111111110000000000, 0b10011110001001000000000000000000)
INST(FCVTAU_single_64_int, "FCVTAU", (Xd, Sn), 0b11111111111111111111110000000000, 0b10011110001001010000000000000000)
INST(FCVTPS_single_64_int, "FCVTPS", (Xd, Sn), 0b11111111111111111111110000000000, 0b10011110001010000000000000000000)
INST(FCVTPU_single_64_int, "FCVTPU", (Xd, Sn), 0b11111111111111111111110000000000, 0b10011110001010010000000000000000)
INST(FCVTMS_single_64_int, "FCVTMS", (Xd, Sn), 0b11111111111111111111110000000000, 0b10011110001100000000000000000000)
INST(FCVTMU_single_64_int, "FCVTMU", (Xd, Sn), 0b11111111111111111111110000000000, 0b10011110001100010000000000000000)
INST(FCVTZS_single_64_int, "FCVTZS", (Xd, Sn), 0b11111111111111111111110000000000, 0b10011110001110000000000000000000)
INST(FCVTZU_single_64_int, "FCVTZU", (Xd, Sn), 0b11111111111111111111110000000000, 0b10011110001110010000000000000000)
INST(FCVTNS_double_64_int, "FCVTNS", (Xd, Dn), 0b11111111111111111111110000000000, 0b10011110011000000000000000000000)
INST(FCVTNU_double_64_int, "FCVTNU", (Xd, Dn), 0b11111111111111111111110000000000, 0b10011110011000010000000000000000)
INST(SCVTF_64_double_int, "SCVTF", (Dd, Xn),   0b11111111111111111111110000000000, 0b10011110011000100000000000000000)
INST(UCVTF_64_double_int, "UCVTF", (Dd, Xn),   0b11111111111111111111110000000000, 0b10011110011000110000000000000000)
INST(FCVTAS_double_64_int, "FCVTAS", (Xd, Dn), 0b11111111111111111111110000000000, 0b10011110011001000000000000000000)
INST(FCVTAU_double_64_int, "FCVTAU", (Xd, Dn), 0b11111111111111111111110000000000, 0b10011110011001010000000000000000)
INST(FMOV_double_64, "FMOV", (Xd, Dn),         0b11111111111111111111110000000000, 0b10011110011001100000000000000000)
INST(FMOV_64_double, "FMOV", (Dd, Xn),         0b11111111111111111111110000000000, 0b10011110011001110000000000000000)
INST(FCVTPS_double_64_int, "FCVTPS", (Xd, Dn), 0b11111111111111111111110000000000, 0b10011110011010000000000000000000)
INST(FCVTPU_double_64_int, "FCVTPU", (Xd, Dn), 0b11111111111111111111110000000000, 0b10011110011010010000000000000000)
INST(FCVTMS_double_64_int, "FCVTMS", (Xd, Dn), 0b11111111111111111111110000000000, 0b10011110011100000000000000000000)
INST(FCVTMU_double_64_int, "FCVTMU", (Xd, Dn), 0b11111111111111111111110000000000, 0b10011110011100010000000000000000)
INST(FCVTZS_double_64_int, "FCVTZS", (Xd, Dn), 0b11111111111111111111110000000000, 0b10011110011110000000000000000000)
INST(FCVTZU_double_64_int, "FCVTZU", (Xd, Dn), 0b11111111111111111111110000000000, 0b10011110011110010000000000000000)
INST(FMOV_top128_64, "FMOV", (TODO),           0b11111111111111111111110000000000, 0b10011110101011100000000000000000)
INST(FMOV_64_top128, "FMOV", (TODO),           0b11111111111111111111110000000000, 0b10011110101011110000000000000000)
// Floating-point data-processing (1 source)
INST(FMOV_reg_single, "FMOV", (Sd, Sn),    0b11111111111111111111110000000000, 0b00011110001000000100000000000000)
INST(FABS_single, "FABS", (Sd, Sn),        0b11111111111111111111110000000000, 0b00011110001000001100000000000000)
INST(FNEG_single, "FNEG", (Sd, Sn),        0b11111111111111111111110000000000, 0b00011110001000010100000000000000)
INST(FSQRT_single, "FSQRT", (Sd, Sn),      0b11111111111111111111110000000000, 0b00011110001000011100000000000000)
INST(FCVT_single_double, "FCVT", (Dd, Sn), 0b11111111111111111111110000000000, 0b00011110001000101100000000000000)
INST(FCVT_single_half, "FCVT", (Hd, Sn),   0b11111111111111111111110000000000, 0b00011110001000111100000000000000)
INST(FRINTN_single, "FRINTN", (Sd, Sn),    0b11111111111111111111110000000000, 0b00011110001001000100000000000000)
INST(FRINTP_single, "FRINTP", (Sd, Sn),    0b11111111111111111111110000000000, 0b00011110001001001100000000000000)
INST(FRINTM_single, "FRINTM", (Sd, Sn),    0b11111111111111111111110000000000, 0b00011110001001010100000000000000)
INST(FRINTZ_single, "FRINTZ", (Sd, Sn),    0b11111111111111111111110000000000, 0b00011110001001011100000000000000)
INST(FRINTA_single, "FRINTA", (Sd, Sn),    0b11111111111111111111110000000000, 0b00011110001001100100000000000000)
INST(FRINTX_single, "FRINTX", (Sd, Sn),    0b11111111111111111111110000000000, 0b00011110001001110100000000000000)
INST(FRINTI_single, "FRINTI", (Sd, Sn),    0b11111111111111111111110000000000, 0b00011110001001111100000000000000)
INST(FMOV_reg_double, "FMOV", (Dd, Dn),    0b11111111111111111111110000000000, 0b00011110011000000100000000000000)
INST(FABS_double, "FABS", (Dd, Dn),        0b11111111111111111111110000000000, 0b00011110011000001100000000000000)
INST(FNEG_double, "FNEG", (Dd, Dn),        0b11111111111111111111110000000000, 0b00011110011000010100000000000000)
INST(FSQRT_double, "FSQRT", (Dd, Dn),      0b11111111111111111111110000000000, 0b00011110011000011100000000000000)
INST(FCVT_double_single, "FCVT", (Sd, Dn), 0b11111111111111111111110000000000, 0b00011110011000100100000000000000)
INST(FCVT_double_half, "FCVT", (Hd, Dn),   0b11111111111111111111110000000000, 0b00011110011000111100000000000000)
INST(FRINTN_double, "FRINTN", (Dd, Dn),    0b11111111111111111111110000000000, 0b00011110011001000100000000000000)
INST(FRINTP_double, "FRINTP", (Dd, Dn),    0b11111111111111111111110000000000, 0b00011110011001001100000000000000)
INST(FRINTM_double, "FRINTM", (Dd, Dn),    0b11111111111111111111110000000000, 0b00011110011001010100000000000000)
INST(FRINTZ_double, "FRINTZ", (Dd, Dn),    0b11111111111111111111110000000000, 0b00011110011001011100000000000000)
INST(FRINTA_double, "FRINTA", (Dd, Dn),    0b11111111111111111111110000000000, 0b00011110011001100100000000000000)
INST(FRINTX_double, "FRINTX", (Dd, Dn),    0b11111111111111111111110000000000, 0b00011110011001110100000000000000)
INST(FRINTI_double, "FRINTI", (Dd, Dn),    0b11111111111111111111110000000000, 0b00011110011001111100000000000000)
INST(FCVT_half_single, "FCVT", (Sd, Hn),   0b11111111111111111111110000000000, 0b00011110111000100100000000000000)
INST(FCVT_half_double, "FCVT", (Dd, Hn),   0b11111111111111111111110000000000, 0b00011110111000101100000000000000)
// Floating-point compare
INST(FCMP_single, "FCMP", (Sn, Sm),                    0b11111111111000001111110000011111, 0b00011110001000000010000000000000)
INST(FCMP_single_zero, "FCMP", (Sn, float_zero_imm),   0b11111111111000001111110000011111, 0b00011110001000000010000000001000)
INST(FCMPE_single, "FCMPE", (Sn, Sm),                  0b11111111111000001111110000011111, 0b00011110001000000010000000010000)
INST(FCMPE_single_zero, "FCMPE", (Sn, float_zero_imm), 0b11111111111000001111110000011111, 0b00011110001000000010000000011000)
INST(FCMP_double, "FCMP", (Dn, Dm),                    0b11111111111000001111110000011111, 0b00011110011000000010000000000000)
INST(FCMP_double_zero, "FCMP", (Dn, float_zero_imm),   0b11111111111000001111110000011111, 0b00011110011000000010000000001000)
INST(FCMPE_double, "FCMPE", (Dn, Dm),                  0b11111111111000001111110000011111, 0b00011110011000000010000000010000)
INST(FCMPE_double_zero, "FCMPE", (Dn, float_zero_imm), 0b11111111111000001111110000011111, 0b00011110011000000010000000011000)
// Floating-point immediate
INST(FMOV_imm_single, "FMOV", (TODO), 0b11111111111000000001111111100000, 0b00011110001000000001000000000000)
INST(FMOV_imm_double, "FMOV", (TODO), 0b11111111111000000001111111100000, 0b00011110011000000001000000000000)
// Floating-point conditional compare
INST(FCCMP_single, "FCCMP", (Sn, Sm, cond_comp_flags, cond_comp),   0b11111111111000000000110000010000, 0b00011110001000000000010000000000)
INST(FCCMPE_single, "FCCMPE", (Sn, Sm, cond_comp_flags, cond_comp), 0b11111111111000000000110000010000, 0b00011110001000000000010000010000)
INST(FCCMP_double, "FCCMP", (Dn, Dm, cond_comp_flags, cond_comp),   0b11111111111000000000110000010000, 0b00011110011000000000010000000000)
INST(FCCMPE_double, "FCCMPE", (Dn, Dm, cond_comp_flags, cond_comp), 0b11111111111000000000110000010000, 0b00011110011000000000010000010000)
// Floating-point data-processing (2 source)
INST(FMUL_single, "FMUL", (Sd, Sn, Sm),     0b11111111111000001111110000000000, 0b00011110001000000000100000000000)
INST(FDIV_single, "FDIV", (Sd, Sn, Sm),     0b11111111111000001111110000000000, 0b00011110001000000001100000000000)
INST(FADD_single, "FADD", (Sd, Sn, Sm),     0b11111111111000001111110000000000, 0b00011110001000000010100000000000)
INST(FSUB_single, "FSUB", (Sd, Sn, Sm),     0b11111111111000001111110000000000, 0b00011110001000000011100000000000)
INST(FMAX_single, "FMAX", (Sd, Sn, Sm),     0b11111111111000001111110000000000, 0b00011110001000000100100000000000)
INST(FMIN_single, "FMIN", (Sd, Sn, Sm),     0b11111111111000001111110000000000, 0b00011110001000000101100000000000)
INST(FMAXNM_single, "FMAXNM", (Sd, Sn, Sm), 0b11111111111000001111110000000000, 0b00011110001000000110100000000000)
INST(FMINNM_single, "FMINNM", (Sd, Sn, Sm), 0b11111111111000001111110000000000, 0b00011110001000000111100000000000)
INST(FNMUL_single, "FNMUL", (Sd, Sn, Sm),   0b11111111111000001111110000000000, 0b00011110001000001000100000000000)
INST(FMUL_double, "FMUL", (Dd, Dn, Dm),     0b11111111111000001111110000000000, 0b00011110011000000000100000000000)
INST(FDIV_double, "FDIV", (Dd, Dn, Dm),     0b11111111111000001111110000000000, 0b00011110011000000001100000000000)
INST(FADD_double, "FADD", (Dd, Dn, Dm),     0b11111111111000001111110000000000, 0b00011110011000000010100000000000)
INST(FSUB_double, "FSUB", (Dd, Dn, Dm),     0b11111111111000001111110000000000, 0b00011110011000000011100000000000)
INST(FMAX_double, "FMAX", (Dd, Dn, Dm),     0b11111111111000001111110000000000, 0b00011110011000000100100000000000)
INST(FMIN_double, "FMIN", (Dd, Dn, Dm),     0b11111111111000001111110000000000, 0b00011110011000000101100000000000)
INST(FMAXNM_double, "FMANNM", (Dd, Dn, Dm), 0b11111111111000001111110000000000, 0b00011110011000000110100000000000)
INST(FMINNM_double, "FMINNM", (Dd, Dn, Dm), 0b11111111111000001111110000000000, 0b00011110011000000111100000000000)
INST(FNMUL_double, "FNMUL", (Dd, Dn, Dm),   0b11111111111000001111110000000000, 0b00011110011000001000100000000000)
// Floating-point conditional select
INST(FCSEL_single, "FCSEL", (Sd, Sn, Sm, cond_comp), 0b11111111111000000000110000000000, 0b00011110001000000000110000000000)
INST(FCSEL_double, "FCSEL", (Dd, Dn, Dm, cond_comp), 0b11111111111000000000110000000000, 0b00011110011000000000110000000000)
// Floating-point data-processing (3 source)
INST(FMADD_single, "FMADD", (Sd, Sn, Sm, Sa),   0b11111111111000001000000000000000, 0b00011111000000000000000000000000)
INST(FMSUB_single, "FMSUB", (Sd, Sn, Sm, Sa),   0b11111111111000001000000000000000, 0b00011111000000001000000000000000)
INST(FNMADD_single, "FNMADD", (Sd, Sn, Sm, Sa), 0b11111111111000001000000000000000, 0b00011111001000000000000000000000)
INST(FNMSUB_single, "FNMSUB", (Sd, Sn, Sm, Sa), 0b11111111111000001000000000000000, 0b00011111001000001000000000000000)
INST(FMADD_double, "FMADD", (Dd, Dn, Dm, Da),   0b11111111111000001000000000000000, 0b00011111010000000000000000000000)
INST(FMSUB_double, "FMSUB", (Dd, Dn, Dm, Da),   0b11111111111000001000000000000000, 0b00011111010000001000000000000000)
INST(FNMADD_double, "FNMADD", (Dd, Dn, Dm, Da), 0b11111111111000001000000000000000, 0b00011111011000000000000000000000)
INST(FNMSUB_double, "FNMSUB", (Dd, Dn, Dm, Da), 0b11111111111000001000000000000000, 0b00011111011000001000000000000000)

// Cryptographic
// Cryptographic AES
INST(AESE, "AESE", (TODO),     0b11111111111111111111110000000000, 0b01001110001010000100100000000000)
INST(AESD, "AESD", (TODO),     0b11111111111111111111110000000000, 0b01001110001010000101100000000000)
INST(AESMC, "AESMC", (TODO),   0b11111111111111111111110000000000, 0b01001110001010000110100000000000)
INST(AESIMC, "AESIMC", (TODO), 0b11111111111111111111110000000000, 0b01001110001010000111100000000000)
// Cryptographic three-register SHA
INST(SHA1C, "SHA1C", (TODO),         0b11111111111000001111110000000000, 0b01011110000000000000000000000000)
INST(SHA1P, "SHA1P", (TODO),         0b11111111111000001111110000000000, 0b01011110000000000001000000000000)
INST(SHA1M, "SHA1M", (TODO),         0b11111111111000001111110000000000, 0b01011110000000000010000000000000)
INST(SHA1SU0, "SHA1SU0", (TODO),     0b11111111111000001111110000000000, 0b01011110000000000011000000000000)
INST(SHA256H, "SHA256H", (TODO),     0b11111111111000001111110000000000, 0b01011110000000000100000000000000)
INST(SHA256H2, "SHA256H2", (TODO),   0b11111111111000001111110000000000, 0b01011110000000000101000000000000)
INST(SHA256SU1, "SHA256SU1", (TODO), 0b11111111111000001111110000000000, 0b01011110000000000110000000000000)
// Cryptographic two-register SHA
INST(SHA1H, "SHA1H", (TODO),         0b11111111111111111111110000000000, 0b01011110001010000000100000000000)
INST(SHA1SU1, "SHA1SU1", (TODO),     0b11111111111111111111110000000000, 0b01011110001010000001100000000000)
INST(SHA256SU0, "SHA256SU0", (TODO), 0b11111111111111111111110000000000, 0b01011110001010000010100000000000)

// SIMD
// Advanced SIMD scalar copy
INST(DUP_element_scalar, "DUP", (TODO), 0b11111111111000001111110000000000, 0b01011110000000000000010000000000, (0b00000000000011110000000000000000))
// Advanced SIMD scalar two-register miscellaneous
INST(SUQADD_scalar, "SUQADD", (TODO),     0b11111111001111111111110000000000, 0b01011110001000000011100000000000)
INST(SQABS_scalar, "SQABS", (TODO),       0b11111111001111111111110000000000, 0b01011110001000000111100000000000)
INST(CMGT_scalar_zero, "CMGT", (TODO),    0b11111111001111111111110000000000, 0b01011110001000001000100000000000)
INST(CMEQ_scalar_zero, "CMEQ", (TODO),    0b11111111001111111111110000000000, 0b01011110001000001001100000000000)
INST(CMLT_scalar_zero, "CMLT", (TODO),    0b11111111001111111111110000000000, 0b01011110001000001010100000000000)
INST(ABS_scalar, "ABS", (TODO),           0b11111111001111111111110000000000, 0b01011110001000001011100000000000)
INST(SQXTN_scalar, "SQXTN", (TODO),       0b11111111001111111111110000000000, 0b01011110001000010100100000000000)
INST(FCVTNS_scalar, "FCVTNS", (TODO),     0b11111111101111111111110000000000, 0b01011110001000011010100000000000)
INST(FCVTMS_scalar, "FCVTMS", (TODO),     0b11111111101111111111110000000000, 0b01011110001000011011100000000000)
INST(FCVTAS_scalar, "FCVTAS", (TODO),     0b11111111101111111111110000000000, 0b01011110001000011100100000000000)
INST(SCVTF_scalar_int, "SCVTF", (TODO),   0b11111111101111111111110000000000, 0b01011110001000011101100000000000)
INST(FCMGT_scalar_zero, "FCMGT", (TODO),  0b11111111101111111111110000000000, 0b01011110101000001100100000000000)
INST(FCMEQ_scalar_zero, "FCMEQ", (TODO),  0b11111111101111111111110000000000, 0b01011110101000001101100000000000)
INST(FCMLT_scalar_zero, "FCMLT", (TODO),  0b11111111101111111111110000000000, 0b01011110101000001110100000000000)
INST(FCVTPS_scalar, "FCVTPS", (TODO),     0b11111111101111111111110000000000, 0b01011110101000011010100000000000)
INST(FCVTZS_scalar_int, "FCVTZS", (TODO), 0b11111111101111111111110000000000, 0b01011110101000011011100000000000)
INST(FRECPE_scalar, "FRECPE", (TODO),     0b11111111101111111111110000000000, 0b01011110101000011101100000000000)
INST(FRECPX_scalar, "FRECPX", (TODO),     0b11111111101111111111110000000000, 0b01011110101000011111100000000000)
INST(USQADD_scalar, "USQADD", (TODO),     0b11111111001111111111110000000000, 0b01111110001000000011100000000000)
INST(SQNEG_scalar, "SQNEG", (TODO),       0b11111111001111111111110000000000, 0b01111110001000000111100000000000)
INST(CMGE_scalar_zero, "CMGE", (TODO),    0b11111111001111111111110000000000, 0b01111110001000001000100000000000)
INST(CMLE_scalar_zero, "CMLE", (TODO),    0b11111111001111111111110000000000, 0b01111110001000001001100000000000)
INST(NEG_scalar, "NEG", (TODO),           0b11111111001111111111110000000000, 0b01111110001000001011100000000000)
INST(SQXTUN_scalar, "SQXTUN", (TODO),     0b11111111001111111111110000000000, 0b01111110001000010010100000000000)
INST(UQXTN_scalar, "UQXTN", (TODO),       0b11111111001111111111110000000000, 0b01111110001000010100100000000000)
INST(FCVTXN_scalar, "FCVTXN", (TODO),     0b11111111101111111111110000000000, 0b01111110001000010110100000000000)
INST(FCVTNU_scalar, "FCVTNU", (TODO),     0b11111111101111111111110000000000, 0b01111110001000011010100000000000)
INST(FCVTMU_scalar, "FCVTMU", (TODO),     0b11111111101111111111110000000000, 0b01111110001000011011100000000000)
INST(FCVTAU_scalar, "FCVTAU", (TODO),     0b11111111101111111111110000000000, 0b01111110001000011100100000000000)
INST(UCVTF_scalar_int, "UCVTF", (TODO),   0b11111111101111111111110000000000, 0b01111110001000011101100000000000)
INST(FCMGE_scalar_zero, "FCMGE", (TODO),  0b11111111101111111111110000000000, 0b01111110101000001100100000000000)
INST(FCMLE_scalar_zero, "FCMLE", (TODO),  0b11111111101111111111110000000000, 0b01111110101000001101100000000000)
INST(FCVTPU_scalar, "FCVTPU", (TODO),     0b11111111101111111111110000000000, 0b01111110101000011010100000000000)
INST(FCVTZU_scalar_int, "FCVTZU", (TODO), 0b11111111101111111111110000000000, 0b01111110101000011011100000000000)
INST(FRSQRTE_scalar, "FRSQRTE", (TODO),   0b11111111101111111111110000000000, 0b01111110101000011101100000000000)
// Advanced SIMD scalar pairwise
INST(ADDP_scalar, "ADDP", (TODO),       0b11111111001111111111110000000000, 0b01011110001100011011100000000000)
INST(FMAXNMP_scalar, "FMAXNMP", (TODO), 0b11111111101111111111110000000000, 0b01111110001100001100100000000000)
INST(FADDP_scalar, "FADDP", (TODO),     0b11111111101111111111110000000000, 0b01111110001100001101100000000000)
INST(FMAXP_scalar, "FMAXP", (TODO),     0b11111111101111111111110000000000, 0b01111110001100001111100000000000)
INST(FMINNMP_scalar, "FMINNMP", (TODO), 0b11111111101111111111110000000000, 0b01111110101100001100100000000000)
INST(FMINP_scalar, "FMINP", (TODO),     0b11111111101111111111110000000000, 0b01111110101100001111100000000000)
// Advanced SIMD scalar three different
INST(SQDMLAL_scalar, "SQDMLAL", (TODO),   0b11111111001000001111110000000000, 0b01011110001000001001000000000000)
INST(SQDMLSL_scalar, "SQDMLSL", (TODO),   0b11111111001000001111110000000000, 0b01011110001000001011000000000000)
INST(SQDMULL_scalar, "SQDMULL", (TODO),   0b11111111001000001111110000000000, 0b01011110001000001101000000000000)
// Advanced SIMD scalar three same
INST(SQADD_scalar, "SQADD", (TODO),       0b11111111001000001111110000000000, 0b01011110001000000000110000000000)
INST(SQSUB_scalar, "SQSUB", (TODO),       0b11111111001000001111110000000000, 0b01011110001000000010110000000000)
INST(CMGT_scalar_reg, "CMGT", (TODO),     0b11111111001000001111110000000000, 0b01011110001000000011010000000000)
INST(CMGE_scalar_reg, "CMGE", (TODO),     0b11111111001000001111110000000000, 0b01011110001000000011110000000000)
INST(SSHL_scalar, "SSHL", (TODO),         0b11111111001000001111110000000000, 0b01011110001000000100010000000000)
INST(SQSHL_scalar_reg, "SQSHL", (TODO),   0b11111111001000001111110000000000, 0b01011110001000000100110000000000)
INST(SRSHL_scalar, "SRSHL", (TODO),       0b11111111001000001111110000000000, 0b01011110001000000101010000000000)
INST(SQRSHL_scalar, "SQRSHL", (TODO),     0b11111111001000001111110000000000, 0b01011110001000000101110000000000)
INST(ADD_scalar, "ADD", (TODO),           0b11111111001000001111110000000000, 0b01011110001000001000010000000000)
INST(CMTST_scalar, "CMTST", (TODO),       0b11111111001000001111110000000000, 0b01011110001000001000110000000000)
INST(SQDMULH_scalar, "SQDMULH", (TODO),   0b11111111001000001111110000000000, 0b01011110001000001011010000000000)
INST(FMULX_scalar, "FMULX", (TODO),       0b11111111101000001111110000000000, 0b01011110001000001101110000000000)
INST(FCMEQ_scalar_reg, "FCMEQ", (TODO),   0b11111111101000001111110000000000, 0b01011110001000001110010000000000)
INST(FRECPS_scalar, "FRECPS", (TODO),     0b11111111101000001111110000000000, 0b01011110001000001111110000000000)
INST(FRSQRTS_scalar, "FRSQRTS", (TODO),   0b11111111101000001111110000000000, 0b01011110101000001111110000000000)
INST(UQADD_scalar, "UQADD", (TODO),       0b11111111001000001111110000000000, 0b01111110001000000000110000000000)
INST(UQSUB_scalar, "UQSUB", (TODO),       0b11111111001000001111110000000000, 0b01111110001000000010110000000000)
INST(CMHI_scalar_reg, "CMHI", (TODO),     0b11111111001000001111110000000000, 0b01111110001000000011010000000000)
INST(CMHS_scalar_reg, "CMHS", (TODO),     0b11111111001000001111110000000000, 0b01111110001000000011110000000000)
INST(USHL_scalar, "USHL", (TODO),         0b11111111001000001111110000000000, 0b01111110001000000100010000000000)
INST(UQSHL_scalar_reg, "UQSHL", (TODO),   0b11111111001000001111110000000000, 0b01111110001000000100110000000000)
INST(URSHL_scalar, "URSHL", (TODO),       0b11111111001000001111110000000000, 0b01111110001000000101010000000000)
INST(UQRSHL_scalar, "UQRSHL", (TODO),     0b11111111001000001111110000000000, 0b01111110001000000101110000000000)
INST(SUB_scalar, "SUB", (TODO),           0b11111111001000001111110000000000, 0b01111110001000001000010000000000)
INST(CMEQ_scalar_reg, "CMEQ", (TODO),     0b11111111001000001111110000000000, 0b01111110001000001000110000000000)
INST(SQRDMULH_scalar, "SQRDMULH", (TODO), 0b11111111001000001111110000000000, 0b01111110001000001011010000000000)
INST(FCMGE_scalar_reg, "FCMGE", (TODO),   0b11111111101000001111110000000000, 0b01111110001000001110010000000000)
INST(FACGE_scalar, "FACGE", (TODO),       0b11111111101000001111110000000000, 0b01111110001000001110110000000000)
INST(FABD_scalar, "FABD", (TODO),         0b11111111101000001111110000000000, 0b01111110101000001101010000000000)
INST(FCMGT_scalar_reg, "FCMGT", (TODO),   0b11111111101000001111110000000000, 0b01111110101000001110010000000000)
INST(FACGT_scalar, "FACGT", (TODO),       0b11111111101000001111110000000000, 0b01111110101000001110110000000000)
// Advanced SIMD scalar shift by immediate
INST(SSHR_scalar, "SSHR", (TODO),           0b11111111100000001111110000000000, 0b01011111000000000000010000000000, (0b00000000011110000000000000000000))
INST(SSRA_scalar, "SSRA", (TODO),           0b11111111100000001111110000000000, 0b01011111000000000001010000000000, (0b00000000011110000000000000000000))
INST(SRSHR_scalar, "SRSHR", (TODO),         0b11111111100000001111110000000000, 0b01011111000000000010010000000000, (0b00000000011110000000000000000000))
INST(SRSRA_scalar, "SRSRA", (TODO),         0b11111111100000001111110000000000, 0b01011111000000000011010000000000, (0b00000000011110000000000000000000))
INST(SHL_scalar, "SHL", (TODO),             0b11111111100000001111110000000000, 0b01011111000000000101010000000000, (0b00000000011110000000000000000000))
INST(SQSHL_scalar_imm, "SQSHL", (TODO),     0b11111111100000001111110000000000, 0b01011111000000000111010000000000, (0b00000000011110000000000000000000))
INST(SQSHRN_scalar, "SQSHRN", (TODO),       0b11111111100000001111110000000000, 0b01011111000000001001010000000000, (0b00000000011110000000000000000000))
INST(SQRSHRN_scalar, "SQRSHRN", (TODO),     0b11111111100000001111110000000000, 0b01011111000000001001110000000000, (0b00000000011110000000000000000000))
INST(SCVTF_scalar_fixed, "SCVTF", (TODO),   0b11111111100000001111110000000000, 0b01011111000000001110010000000000, (0b00000000011110000000000000000000))
INST(FCVTZS_scalar_fixed, "FCVTZS", (TODO), 0b11111111100000001111110000000000, 0b01011111000000001111110000000000, (0b00000000011110000000000000000000))
INST(USHR_scalar, "USHR", (TODO),           0b11111111100000001111110000000000, 0b01111111000000000000010000000000, (0b00000000011110000000000000000000))
INST(USRA_scalar, "USRA", (TODO),           0b11111111100000001111110000000000, 0b01111111000000000001010000000000, (0b00000000011110000000000000000000))
INST(URSHR_scalar, "URSHR", (TODO),         0b11111111100000001111110000000000, 0b01111111000000000010010000000000, (0b00000000011110000000000000000000))
INST(URSRA_scalar, "URSRA", (TODO),         0b11111111100000001111110000000000, 0b01111111000000000011010000000000, (0b00000000011110000000000000000000))
INST(SRI_scalar, "SRI", (TODO),             0b11111111100000001111110000000000, 0b01111111000000000100010000000000, (0b00000000011110000000000000000000))
INST(SLI_scalar, "SLI", (TODO),             0b11111111100000001111110000000000, 0b01111111000000000101010000000000, (0b00000000011110000000000000000000))
INST(SQSHLU_scalar, "SQSHLU", (TODO),       0b11111111100000001111110000000000, 0b01111111000000000110010000000000, (0b00000000011110000000000000000000))
INST(UQSHL_scalar_imm, "UQSHL", (TODO),     0b11111111100000001111110000000000, 0b01111111000000000111010000000000, (0b00000000011110000000000000000000))
INST(SQSHRUN_scalar, "SQSHRUN", (TODO),     0b11111111100000001111110000000000, 0b01111111000000001000010000000000, (0b00000000011110000000000000000000))
INST(SQRSHRUN_scalar, "SQRSHRUN", (TODO),   0b11111111100000001111110000000000, 0b01111111000000001000110000000000, (0b00000000011110000000000000000000))
INST(UQSHRN_scalar, "UQSHRN", (TODO),       0b11111111100000001111110000000000, 0b01111111000000001001010000000000, (0b00000000011110000000000000000000))
INST(UQRSHRN_scalar, "UQRSHRN", (TODO),     0b11111111100000001111110000000000, 0b01111111000000001001110000000000, (0b00000000011110000000000000000000))
INST(UCVTF_scalar_fixed, "UCVTF", (TODO),   0b11111111100000001111110000000000, 0b01111111000000001110010000000000, (0b00000000011110000000000000000000))
INST(FCVTZU_scalar_fixed, "FCVTZU", (TODO), 0b11111111100000001111110000000000, 0b01111111000000001111110000000000, (0b00000000011110000000000000000000))
// Advanced SIMD scalar x indexed element
INST(SQDMLAL_scalar_element, "SQDMLAL", (TODO),   0b11111111000000001111010000000000, 0b01011111000000000011000000000000)
INST(SQDMLSL_scalar_element, "SQDMLSL", (TODO),   0b11111111000000001111010000000000, 0b01011111000000000111000000000000)
INST(SQDMULL_scalar_element, "SQDMULL", (TODO),   0b11111111000000001111010000000000, 0b01011111000000001011000000000000)
INST(SQDMULH_scalar_element, "SQDMULH", (TODO),   0b11111111000000001111010000000000, 0b01011111000000001100000000000000)
INST(SQRDMULH_scalar_element, "SQRDMULH", (TODO), 0b11111111000000001111010000000000, 0b01011111000000001101000000000000)
INST(FMLA_scalar_element, "FMLA", (TODO),         0b11111111100000001111010000000000, 0b01011111100000000001000000000000)
INST(FMLS_scalar_element, "FMLS", (TODO),         0b11111111100000001111010000000000, 0b01011111100000000101000000000000)
INST(FMUL_scalar_element, "FMUL", (TODO),         0b11111111100000001111010000000000, 0b01011111100000001001000000000000)
INST(FMULX_scalar_element, "FMULX", (TODO),       0b11111111100000001111010000000000, 0b01111111100000001001000000000000)
// Advanced SIMD table lookup
INST(TBL_one_reg, "TBL", (TODO),   0b10111111111000001111110000000000, 0b00001110000000000000000000000000)
INST(TBX_one_reg, "TBX", (TODO),   0b10111111111000001111110000000000, 0b00001110000000000001000000000000)
INST(TBL_two_reg, "TBL", (TODO),   0b10111111111000001111110000000000, 0b00001110000000000010000000000000)
INST(TBX_two_reg, "TBX", (TODO),   0b10111111111000001111110000000000, 0b00001110000000000011000000000000)
INST(TBL_three_reg, "TBL", (TODO), 0b10111111111000001111110000000000, 0b00001110000000000100000000000000)
INST(TBX_three_reg, "TBX", (TODO), 0b10111111111000001111110000000000, 0b00001110000000000101000000000000)
INST(TBL_four_reg, "TBL", (TODO),  0b10111111111000001111110000000000, 0b00001110000000000110000000000000)
INST(TBX_four_reg, "TBX", (TODO),  0b10111111111000001111110000000000, 0b00001110000000000111000000000000)
// Advanced SIMD permute
INST(UZP1, "UZP1", (TODO), 0b10111111001000001111110000000000, 0b00001110000000000001100000000000)
INST(TRN1, "TRN1", (TODO), 0b10111111001000001111110000000000, 0b00001110000000000010100000000000)
INST(ZIP1, "ZIP1", (TODO), 0b10111111001000001111110000000000, 0b00001110000000000011100000000000)
INST(UZP2, "UZP2", (TODO), 0b10111111001000001111110000000000, 0b00001110000000000101100000000000)
INST(TRN2, "TRN2", (TODO), 0b10111111001000001111110000000000, 0b00001110000000000110100000000000)
INST(ZIP2, "ZIP2", (TODO), 0b10111111001000001111110000000000, 0b00001110000000000111100000000000)
// Advanced SIMD extract
INST(EXT, "EXT", (TODO), 0b10111111111000001000010000000000, 0b00101110000000000000000000000000)
// Advanced SIMD copy
INST(DUP_element_vec, "DUP", (TODO), 0b10111111111000001111110000000000, 0b00001110000000000000010000000000, (0b00000000000011110000000000000000))
INST(DUP_general, "DUP", (TODO),     0b10111111111000001111110000000000, 0b00001110000000000000110000000000, (0b00000000000011110000000000000000))
INST(SMOV_32, "SMOV", (TODO),        0b11111111111000001111110000000000, 0b00001110000000000010110000000000, (0b00000000000011110000000000000000))
INST(UMOV_32, "UMOV", (TODO),        0b11111111111000001111110000000000, 0b00001110000000000011110000000000, (0b00000000000011110000000000000000))
INST(INS_general, "INS", (TODO),     0b11111111111000001111110000000000, 0b01001110000000000001110000000000, (0b00000000000011110000000000000000))
INST(SMOV_64, "SMOV", (TODO),        0b11111111111000001111110000000000, 0b01001110000000000010110000000000, (0b00000000000011110000000000000000))
INST(UMOV_64, "UMOV", (TODO),        0b11111111111011111111110000000000, 0b01001110000010000011110000000000, (0b00000000000011110000000000000000))
INST(INS_element, "INS", (TODO),     0b11111111111000001000010000000000, 0b01101110000000000000010000000000, (0b00000000000011110000000000000000))
// Advanced SIMD two-register miscellaneous
INST(REV64_vec, "REV64", (TODO),       0b10111111001111111111110000000000, 0b00001110001000000000100000000000)
INST(REV16_vec, "REV16", (TODO),       0b10111111001111111111110000000000, 0b00001110001000000001100000000000)
INST(SADDLP_vec, "SADDLP", (TODO),     0b10111111001111111111110000000000, 0b00001110001000000010100000000000)
INST(SUQADD_vec, "SUQADD", (TODO),     0b10111111001111111111110000000000, 0b00001110001000000011100000000000)
INST(CLS_vec, "CLS", (TODO),           0b10111111001111111111110000000000, 0b00001110001000000100100000000000)
INST(CNT_vec, "CNT", (TODO),           0b10111111001111111111110000000000, 0b00001110001000000101100000000000)
INST(SADALP_vec, "SADALP", (TODO),     0b10111111001111111111110000000000, 0b00001110001000000110100000000000)
INST(SQABS_vec, "SQABS", (TODO),       0b10111111001111111111110000000000, 0b00001110001000000111100000000000)
INST(CMGT_vec_zero, "CMGT", (TODO),    0b10111111001111111111110000000000, 0b00001110001000001000100000000000)
INST(CMEQ_vec_zero, "CMEQ", (TODO),    0b10111111001111111111110000000000, 0b00001110001000001001100000000000)
INST(CMLT_vec_zero, "CMLT", (TODO),    0b10111111001111111111110000000000, 0b00001110001000001010100000000000)
INST(ABS_vec, "ABS", (TODO),           0b10111111001111111111110000000000, 0b00001110001000001011100000000000)
INST(XTN_vec, "XTN", (TODO),           0b11111111001111111111110000000000, 0b00001110001000010010100000000000)
INST(XTN2_vec, "XTN2", (TODO),         0b11111111001111111111110000000000, 0b01001110001000010010100000000000)
INST(SQXTN_vec, "SQXTN", (TODO),       0b11111111001111111111110000000000, 0b00001110001000010100100000000000)
INST(SQXTN2_vec, "SQXTN2", (TODO),     0b11111111001111111111110000000000, 0b01001110001000010100100000000000)
INST(FCVTN_vec, "FCVTN", (TODO),       0b11111111101111111111110000000000, 0b00001110001000010110100000000000)
INST(FCVTN2_vec, "FCVTN2", (TODO),     0b11111111101111111111110000000000, 0b01001110001000010110100000000000)
INST(FCVTL_vec, "FCVTL", (TODO),       0b11111111101111111111110000000000, 0b00001110001000010111100000000000)
INST(FCVTL2_vec, "FCVTL2", (TODO),     0b11111111101111111111110000000000, 0b01001110001000010111100000000000)
INST(FRINTN_vec, "FRINTN", (TODO),     0b10111111101111111111110000000000, 0b00001110001000011000100000000000)
INST(FRINTM_vec, "FRINTM", (TODO),     0b10111111101111111111110000000000, 0b00001110001000011001100000000000)
INST(FCVTNS_vec, "FCVTNS", (TODO),     0b10111111101111111111110000000000, 0b00001110001000011010100000000000)
INST(FCVTMS_vec, "FCVTMS", (TODO),     0b10111111101111111111110000000000, 0b00001110001000011011100000000000)
INST(FCVTAS_vec, "FCVTAS", (TODO),     0b10111111101111111111110000000000, 0b00001110001000011100100000000000)
INST(SCVTF_vec_int, "SCVTF", (TODO),   0b10111111101111111111110000000000, 0b00001110001000011101100000000000)
INST(FCMGT_vec_zero, "FCMGT", (TODO),  0b10111111101111111111110000000000, 0b00001110101000001100100000000000)
INST(FCMEQ_vec_zero, "FCMEQ", (TODO),  0b10111111101111111111110000000000, 0b00001110101000001101100000000000)
INST(FCMLT_vec_zero, "FCMLT", (TODO),  0b10111111101111111111110000000000, 0b00001110101000001110100000000000)
INST(FABS_vec, "FABS", (TODO),         0b10111111101111111111110000000000, 0b00001110101000001111100000000000)
INST(FRINTP_vec, "FRINTP", (TODO),     0b10111111101111111111110000000000, 0b00001110101000011000100000000000)
INST(FRINTZ_vec, "FRINTZ", (TODO),     0b10111111101111111111110000000000, 0b00001110101000011001100000000000)
INST(FCVTPS_vec, "FCVTPS", (TODO),     0b10111111101111111111110000000000, 0b00001110101000011010100000000000)
INST(FCVTZS_vec_int, "FCVTZS", (TODO), 0b10111111101111111111110000000000, 0b00001110101000011011100000000000)
INST(URECPE_vec, "URECPE", (TODO),     0b10111111101111111111110000000000, 0b00001110101000011100100000000000)
INST(FRECPE_vec, "FRECPE", (TODO),     0b10111111101111111111110000000000, 0b00001110101000011101100000000000)
INST(REV32_vec, "REV32", (TODO),       0b10111111001111111111110000000000, 0b00101110001000000000100000000000)
INST(UADDLP_vec, "UADDLP", (TODO),     0b10111111001111111111110000000000, 0b00101110001000000010100000000000)
INST(USQADD_vec, "USQADD", (TODO),     0b10111111001111111111110000000000, 0b00101110001000000011100000000000)
INST(CLZ_vec, "CLZ", (TODO),           0b10111111001111111111110000000000, 0b00101110001000000100100000000000)
INST(UADALP_vec, "UADALP", (TODO),     0b10111111001111111111110000000000, 0b00101110001000000110100000000000)
INST(SQNEG_vec, "SQNEG", (TODO),       0b10111111001111111111110000000000, 0b00101110001000000111100000000000)
INST(CMGE_vec_zero, "CMGE", (TODO),    0b10111111001111111111110000000000, 0b00101110001000001000100000000000)
INST(CMLE_vec_zero, "CMLE", (TODO),    0b10111111001111111111110000000000, 0b00101110001000001001100000000000)
INST(NEG_vec, "NEG", (TODO),           0b10111111001111111111110000000000, 0b00101110001000001011100000000000)
INST(SQXTUN_vec, "SQXTUN", (TODO),     0b11111111001111111111110000000000, 0b00101110001000010010100000000000)
INST(SQXTUN2_vec, "SQXTUN2", (TODO),   0b11111111001111111111110000000000, 0b01101110001000010010100000000000)
INST(SHLL_vec, "SHLL", (TODO),         0b11111111001111111111110000000000, 0b00101110001000010011100000000000)
INST(SHLL2_vec, "SHLL2", (TODO),       0b11111111001111111111110000000000, 0b01101110001000010011100000000000)
INST(UQXTN_vec, "UQXTN", (TODO),       0b11111111001111111111110000000000, 0b00101110001000010100100000000000)
INST(UQXTN2_vec, "UQXTN2", (TODO),     0b11111111001111111111110000000000, 0b01101110001000010100100000000000)
INST(FCVTXN_vec, "FCVTXN", (TODO),     0b11111111101111111111110000000000, 0b00101110001000010110100000000000)
INST(FCVTXN2_vec, "FCVTXN2", (TODO),   0b11111111101111111111110000000000, 0b01101110001000010110100000000000)
INST(FRINTA_vec, "FRINTA", (TODO),     0b10111111101111111111110000000000, 0b00101110001000011000100000000000)
INST(FRINTX_vec, "FRINTX", (TODO),     0b10111111101111111111110000000000, 0b00101110001000011001100000000000)
INST(FCVTNU_vec, "FCVTNU", (TODO),     0b10111111101111111111110000000000, 0b00101110001000011010100000000000)
INST(FCVTMU_vec, "FCVTMU", (TODO),     0b10111111101111111111110000000000, 0b00101110001000011011100000000000)
INST(FCVTAU_vec, "FCVTAU", (TODO),     0b10111111101111111111110000000000, 0b00101110001000011100100000000000)
INST(UCVTF_vec_int, "UCVTF", (TODO),   0b10111111101111111111110000000000, 0b00101110001000011101100000000000)
INST(NOT_vec, "NOT", (TODO),           0b10111111111111111111110000000000, 0b00101110001000000101100000000000)
INST(RBIT_vec, "RBIT", (TODO),         0b10111111111111111111110000000000, 0b00101110011000000101100000000000)
INST(FCMGE_vec_zero, "FCMGE", (TODO),  0b10111111101111111111110000000000, 0b00101110101000001100100000000000)
INST(FCMLE_vec_zero, "FCMLE", (TODO),  0b10111111101111111111110000000000, 0b00101110101000001101100000000000)
INST(FNEG_vec, "FNEG", (TODO),         0b10111111101111111111110000000000, 0b00101110101000001111100000000000)
INST(FRINTI_vec, "FRINTI", (TODO),     0b10111111101111111111110000000000, 0b00101110101000011001100000000000)
INST(FCVTPU_vec, "FCVTPU", (TODO),     0b10111111101111111111110000000000, 0b00101110101000011010100000000000)
INST(FCVTZU_vec_int, "FCVTZU", (TODO), 0b10111111101111111111110000000000, 0b00101110101000011011100000000000)
INST(URSQRTE_vec, "URSQRTE", (TODO),   0b10111111101111111111110000000000, 0b00101110101000011100100000000000)
INST(FRSQRTE_vec, "FRSQRTE", (TODO),   0b10111111101111111111110000000000, 0b00101110101000011101100000000000)
INST(FSQRT_vec, "FSQRT", (TODO),       0b10111111101111111111110000000000, 0b00101110101000011111100000000000)
// Advanced SIMD across lanes
INST(SADDLV_vec, "SADDLV", (TODO),   0b10111111001111111111110000000000, 0b00001110001100000011100000000000)
INST(SMAXV_vec, "SMAXV", (TODO),     0b10111111001111111111110000000000, 0b00001110001100001010100000000000)
INST(SMINV_vec, "SMINV", (TODO),     0b10111111001111111111110000000000, 0b00001110001100011010100000000000)
INST(ADDV_vec, "ADDV", (TODO),       0b10111111001111111111110000000000, 0b00001110001100011011100000000000)
INST(UADDLV_vec, "UADDLV", (TODO),   0b10111111001111111111110000000000, 0b00101110001100000011100000000000)
INST(UMAXV_vec, "UMAXV", (TODO),     0b10111111001111111111110000000000, 0b00101110001100001010100000000000)
INST(UMINV_vec, "UMINV", (TODO),     0b10111111001111111111110000000000, 0b00101110001100011010100000000000)
INST(FMAXNMV_vec, "FMAXNMV", (TODO), 0b10111111101111111111110000000000, 0b00101110001100001100100000000000)
INST(FMAXV_vec, "FMAXV", (TODO),     0b10111111101111111111110000000000, 0b00101110001100001111100000000000)
INST(FMINNMV_vec, "FMINNMV", (TODO), 0b10111111101111111111110000000000, 0b00101110101100001100100000000000)
INST(FMINV_vec, "FMINV", (TODO),     0b10111111101111111111110000000000, 0b00101110101100001111100000000000)
// Advanced SIMD three different
INST(SADDL, "SADDL", (TODO),           0b11111111001000001111110000000000, 0b00001110001000000000000000000000)
INST(SADDL2, "SADDL2", (TODO),         0b11111111001000001111110000000000, 0b01001110001000000000000000000000)
INST(SADDW, "SADDW", (TODO),           0b11111111001000001111110000000000, 0b00001110001000000001000000000000)
INST(SADDW2, "SADDW2", (TODO),         0b11111111001000001111110000000000, 0b01001110001000000001000000000000)
INST(SSUBL, "SSUBL", (TODO),           0b11111111001000001111110000000000, 0b00001110001000000010000000000000)
INST(SSUBL2, "SSUBL2", (TODO),         0b11111111001000001111110000000000, 0b01001110001000000010000000000000)
INST(SSUBW, "SSUBW", (TODO),           0b11111111001000001111110000000000, 0b00001110001000000011000000000000)
INST(SSUBW2, "SSUBW2", (TODO),         0b11111111001000001111110000000000, 0b01001110001000000011000000000000)
INST(ADDHN, "ADDHN", (TODO),           0b11111111001000001111110000000000, 0b00001110001000000100000000000000)
INST(ADDHN2, "ADDHN2", (TODO),         0b11111111001000001111110000000000, 0b01001110001000000100000000000000)
INST(SABAL, "SABAL", (TODO),           0b11111111001000001111110000000000, 0b00001110001000000101000000000000)
INST(SABAL2, "SABAL2", (TODO),         0b11111111001000001111110000000000, 0b01001110001000000101000000000000)
INST(SUBHN, "SUBHN", (TODO),           0b11111111001000001111110000000000, 0b00001110001000000110000000000000)
INST(SUBHN2, "SUBHN2", (TODO),         0b11111111001000001111110000000000, 0b01001110001000000110000000000000)
INST(SABDL, "SABDL", (TODO),           0b11111111001000001111110000000000, 0b00001110001000000111000000000000)
INST(SABDL2, "SABDL2", (TODO),         0b11111111001000001111110000000000, 0b01001110001000000111000000000000)
INST(SMLAL_vec, "SMLAL", (TODO),       0b11111111001000001111110000000000, 0b00001110001000001000000000000000)
INST(SMLAL2_vec, "SMLAL2", (TODO),     0b11111111001000001111110000000000, 0b01001110001000001000000000000000)
INST(SQDMLAL_vec, "SQDMLAL", (TODO),   0b11111111001000001111110000000000, 0b00001110001000001001000000000000)
INST(SQDMLAL2_vec, "SQDMLAL2", (TODO), 0b11111111001000001111110000000000, 0b01001110001000001001000000000000)
INST(SMLSL_vec, "SMLSL", (TODO),       0b11111111001000001111110000000000, 0b00001110001000001010000000000000)
INST(SMLSL2_vec, "SMLSL2", (TODO),     0b11111111001000001111110000000000, 0b01001110001000001010000000000000)
INST(SQDMLSL_vec, "SQDMLSL", (TODO),   0b11111111001000001111110000000000, 0b00001110001000001011000000000000)
INST(SQDMLSL2_vec, "SQDMLSL2", (TODO), 0b11111111001000001111110000000000, 0b01001110001000001011000000000000)
INST(SMULL_vec, "SMULL", (TODO),       0b11111111001000001111110000000000, 0b00001110001000001100000000000000)
INST(SMULL2_vec, "SMULL2", (TODO),     0b11111111001000001111110000000000, 0b01001110001000001100000000000000)
INST(SQDMULL_vec, "SQDMULL", (TODO),   0b11111111001000001111110000000000, 0b00001110001000001101000000000000)
INST(SQDMULL2_vec, "SQDMULL2", (TODO), 0b11111111001000001111110000000000, 0b01001110001000001101000000000000)
INST(PMULL, "PMULL", (TODO),           0b11111111001000001111110000000000, 0b00001110001000001110000000000000)
INST(PMULL2, "PMULL2", (TODO),         0b11111111001000001111110000000000, 0b01001110001000001110000000000000)
INST(UADDL, "UADDL", (TODO),           0b11111111001000001111110000000000, 0b00101110001000000000000000000000)
INST(UADDL2, "UADDL2", (TODO),         0b11111111001000001111110000000000, 0b01101110001000000000000000000000)
INST(UADDW, "UADDW", (TODO),           0b11111111001000001111110000000000, 0b00101110001000000001000000000000)
INST(UADDW2, "UADDW2", (TODO),         0b11111111001000001111110000000000, 0b01101110001000000001000000000000)
INST(USUBL, "USUBL", (TODO),           0b11111111001000001111110000000000, 0b00101110001000000010000000000000)
INST(USUBL2, "USUBL2", (TODO),         0b11111111001000001111110000000000, 0b01101110001000000010000000000000)
INST(USUBW, "USUBW", (TODO),           0b11111111001000001111110000000000, 0b00101110001000000011000000000000)
INST(USUBW2, "USUBW2", (TODO),         0b11111111001000001111110000000000, 0b01101110001000000011000000000000)
INST(RADDHN, "RADDHN", (TODO),         0b11111111001000001111110000000000, 0b00101110001000000100000000000000)
INST(RADDHN2, "RADDHN2", (TODO),       0b11111111001000001111110000000000, 0b01101110001000000100000000000000)
INST(UABAL, "UABAL", (TODO),           0b11111111001000001111110000000000, 0b00101110001000000101000000000000)
INST(UABAL2, "UABAL2", (TODO),         0b11111111001000001111110000000000, 0b01101110001000000101000000000000)
INST(RSUBHN, "RSUBHN", (TODO),         0b11111111001000001111110000000000, 0b00101110001000000110000000000000)
INST(RSUBHN2, "RSUBHN2", (TODO),       0b11111111001000001111110000000000, 0b01101110001000000110000000000000)
INST(UABDL, "UABDL", (TODO),           0b11111111001000001111110000000000, 0b00101110001000000111000000000000)
INST(UABDL2, "UABDL2", (TODO),         0b11111111001000001111110000000000, 0b01101110001000000111000000000000)
INST(UMLAL_vec, "UMLAL", (TODO),       0b11111111001000001111110000000000, 0b00101110001000001000000000000000)
INST(UMLAL2_vec, "UMLAL2", (TODO),     0b11111111001000001111110000000000, 0b01101110001000001000000000000000)
INST(UMLSL_vec, "UMLSL", (TODO),       0b11111111001000001111110000000000, 0b00101110001000001010000000000000)
INST(UMLSL2_vec, "UMLSL2", (TODO),     0b11111111001000001111110000000000, 0b01101110001000001010000000000000)
INST(UMULL_vec, "UMULL", (TODO),       0b11111111001000001111110000000000, 0b00101110001000001100000000000000)
INST(UMULL2_vec, "UMULL2", (TODO),     0b11111111001000001111110000000000, 0b01101110001000001100000000000000)
// Advanced SIMD three same
INST(SHADD_vec, "SHADD", (TODO),       0b10111111001000001111110000000000, 0b00001110001000000000010000000000)
INST(SQADD_vec, "SQADD", (TODO),       0b10111111001000001111110000000000, 0b00001110001000000000110000000000)
INST(SRHADD_vec, "SRHADD", (TODO),     0b10111111001000001111110000000000, 0b00001110001000000001010000000000)
INST(SHSUB_vec, "SHSUB", (TODO),       0b10111111001000001111110000000000, 0b00001110001000000010010000000000)
INST(SQSUB_vec, "SQSUB", (TODO),       0b10111111001000001111110000000000, 0b00001110001000000010110000000000)
INST(CMGT_vec_reg, "CMGT", (TODO),     0b10111111001000001111110000000000, 0b00001110001000000011010000000000)
INST(CMGE_vec_reg, "CMGE", (TODO),     0b10111111001000001111110000000000, 0b00001110001000000011110000000000)
INST(SSHL_vec, "SSHL", (TODO),         0b10111111001000001111110000000000, 0b00001110001000000100010000000000)
INST(SQSHL_vec_reg, "SQSHL", (TODO),   0b10111111001000001111110000000000, 0b00001110001000000100110000000000)
INST(SRSHL_vec, "SRSHL", (TODO),       0b10111111001000001111110000000000, 0b00001110001000000101010000000000)
INST(SQRSHL_vec, "SQRSHL", (TODO),     0b10111111001000001111110000000000, 0b00001110001000000101110000000000)
INST(SMAX_vec, "SMAX", (TODO),         0b10111111001000001111110000000000, 0b00001110001000000110010000000000)
INST(SMIN_vec, "SMIN", (TODO),         0b10111111001000001111110000000000, 0b00001110001000000110110000000000)
INST(SABD_vec, "SABD", (TODO),         0b10111111001000001111110000000000, 0b00001110001000000111010000000000)
INST(SABA_vec, "SABA", (TODO),         0b10111111001000001111110000000000, 0b00001110001000000111110000000000)
INST(ADD_vec, "ADD", (TODO),           0b10111111001000001111110000000000, 0b00001110001000001000010000000000)
INST(CMTST_vec, "CMTST", (TODO),       0b10111111001000001111110000000000, 0b00001110001000001000110000000000)
INST(MLA_vec, "MLA", (TODO),           0b10111111001000001111110000000000, 0b00001110001000001001010000000000)
INST(MUL_vec, "MUL", (TODO),           0b10111111001000001111110000000000, 0b00001110001000001001110000000000)
INST(SMAXP_vec, "SMAXP", (TODO),       0b10111111001000001111110000000000, 0b00001110001000001010010000000000)
INST(SMINP_vec, "SMINP", (TODO),       0b10111111001000001111110000000000, 0b00001110001000001010110000000000)
INST(SQDMULH_vec, "SQDMULH", (TODO),   0b10111111001000001111110000000000, 0b00001110001000001011010000000000)
INST(ADDP_vec, "ADDP", (TODO),         0b10111111001000001111110000000000, 0b00001110001000001011110000000000)
INST(FMAXNM_vec, "FMAXNM", (TODO),     0b10111111101000001111110000000000, 0b00001110001000001100010000000000)
INST(FMLA_vec, "FMLA", (TODO),         0b10111111101000001111110000000000, 0b00001110001000001100110000000000)
INST(FADD_vec, "FADD", (TODO),         0b10111111101000001111110000000000, 0b00001110001000001101010000000000)
INST(FMULX_vec, "FMULX", (TODO),       0b10111111101000001111110000000000, 0b00001110001000001101110000000000)
INST(FCMEQ_vec_reg, "FCMEQ", (TODO),   0b10111111101000001111110000000000, 0b00001110001000001110010000000000)
INST(FMAX_vec, "FMAX", (TODO),         0b10111111101000001111110000000000, 0b00001110001000001111010000000000)
INST(FRECPS_vec, "FRECPS", (TODO),     0b10111111101000001111110000000000, 0b00001110001000001111110000000000)
INST(AND_vec, "AND", (TODO),           0b10111111111000001111110000000000, 0b00001110001000000001110000000000)
INST(BIC_vec_reg, "BIC", (TODO),       0b10111111111000001111110000000000, 0b00001110011000000001110000000000)
INST(FMINNM_vec, "FMINNM", (TODO),     0b10111111101000001111110000000000, 0b00001110101000001100010000000000)
INST(FMLS_vec, "FMLS", (TODO),         0b10111111101000001111110000000000, 0b00001110101000001100110000000000)
INST(FSUB_vec, "FSUB", (TODO),         0b10111111101000001111110000000000, 0b00001110101000001101010000000000)
INST(FMIN_vec, "FMIN", (TODO),         0b10111111101000001111110000000000, 0b00001110101000001111010000000000)
INST(FRSQRTS_vec, "FRSQRTS", (TODO),   0b10111111101000001111110000000000, 0b00001110101000001111110000000000)
INST(ORR_vec_reg, "ORR", (TODO),       0b10111111111000001111110000000000, 0b00001110101000000001110000000000)
INST(ORN_vec, "ORN", (TODO),           0b10111111111000001111110000000000, 0b00001110111000000001110000000000)
INST(UHADD_vec, "UHADD", (TODO),       0b10111111001000001111110000000000, 0b00101110001000000000010000000000)
INST(UQADD_vec, "UQADD", (TODO),       0b10111111001000001111110000000000, 0b00101110001000000000110000000000)
INST(URHADD_vec, "URHADD", (TODO),     0b10111111001000001111110000000000, 0b00101110001000000001010000000000)
INST(UHSUB_vec, "UHSUB", (TODO),       0b10111111001000001111110000000000, 0b00101110001000000010010000000000)
INST(UQSUB_vec, "UQSUB", (TODO),       0b10111111001000001111110000000000, 0b00101110001000000010110000000000)
INST(CMHI_vec_reg, "CMHI", (TODO),     0b10111111001000001111110000000000, 0b00101110001000000011010000000000)
INST(CMHS_vec_reg, "CMHS", (TODO),     0b10111111001000001111110000000000, 0b00101110001000000011110000000000)
INST(USHL_vec, "USHL", (TODO),         0b10111111001000001111110000000000, 0b00101110001000000100010000000000)
INST(UQSHL_vec_reg, "UQSHL", (TODO),   0b10111111001000001111110000000000, 0b00101110001000000100110000000000)
INST(URSHL_vec, "URSHL", (TODO),       0b10111111001000001111110000000000, 0b00101110001000000101010000000000)
INST(UQRSHL_vec, "UQRSHL", (TODO),     0b10111111001000001111110000000000, 0b00101110001000000101110000000000)
INST(UMAX_vec, "UMAX", (TODO),         0b10111111001000001111110000000000, 0b00101110001000000110010000000000)
INST(UMIN_vec, "UMIN", (TODO),         0b10111111001000001111110000000000, 0b00101110001000000110110000000000)
INST(UABD_vec, "UABD", (TODO),         0b10111111001000001111110000000000, 0b00101110001000000111010000000000)
INST(UABA_vec, "UABA", (TODO),         0b10111111001000001111110000000000, 0b00101110001000000111110000000000)
INST(SUB_vec, "SUB", (TODO),           0b10111111001000001111110000000000, 0b00101110001000001000010000000000)
INST(CMEQ_vec_reg, "CMEQ", (TODO),     0b10111111001000001111110000000000, 0b00101110001000001000110000000000)
INST(MLS_vec, "MLS", (TODO),           0b10111111001000001111110000000000, 0b00101110001000001001010000000000)
INST(PMUL_vec, "PMUL", (TODO),         0b10111111001000001111110000000000, 0b00101110001000001001110000000000)
INST(UMAXP_vec, "UMAXP", (TODO),       0b10111111001000001111110000000000, 0b00101110001000001010010000000000)
INST(UMINP_vec, "UMINP", (TODO),       0b10111111001000001111110000000000, 0b00101110001000001010110000000000)
INST(SQRDMULH_vec, "SQRDMULH", (TODO), 0b10111111001000001111110000000000, 0b00101110001000001011010000000000)
INST(FMAXNMP_vec, "FMAXNMP", (TODO),   0b10111111101000001111110000000000, 0b00101110001000001100010000000000)
INST(FADDP_vec, "FADDP", (TODO),       0b10111111101000001111110000000000, 0b00101110001000001101010000000000)
INST(FMUL_vec, "FMUL", (TODO),         0b10111111101000001111110000000000, 0b00101110001000001101110000000000)
INST(FCMGE_vec_reg, "FCMGE", (TODO),   0b10111111101000001111110000000000, 0b00101110001000001110010000000000)
INST(FACGE_vec, "FACGE", (TODO),       0b10111111101000001111110000000000, 0b00101110001000001110110000000000)
INST(FMAXP_vec, "FMAXP", (TODO),       0b10111111101000001111110000000000, 0b00101110001000001111010000000000)
INST(FDIV_vec, "FDIV", (TODO),         0b10111111101000001111110000000000, 0b00101110001000001111110000000000)
INST(EOR_vec, "EOR", (TODO),           0b10111111111000001111110000000000, 0b00101110001000000001110000000000)
INST(BSL_vec, "BSL", (TODO),           0b10111111111000001111110000000000, 0b00101110011000000001110000000000)
INST(FMINNMP_vec, "FMINNMP", (TODO),   0b10111111101000001111110000000000, 0b00101110101000001100010000000000)
INST(FABD_vec, "FABD", (TODO),         0b10111111101000001111110000000000, 0b00101110101000001101010000000000)
INST(FCMGT_vec_reg, "FCMGT", (TODO),   0b10111111101000001111110000000000, 0b00101110101000001110010000000000)
INST(FACGT_vec, "FACGT", (TODO),       0b10111111101000001111110000000000, 0b00101110101000001110110000000000)
INST(FMINP_vec, "FMINP", (TODO),       0b10111111101000001111110000000000, 0b00101110101000001111010000000000)
INST(BIT_vec, "BIT", (TODO),           0b10111111111000001111110000000000, 0b00101110101000000001110000000000)
INST(BIF_vec, "BIF", (TODO),           0b10111111111000001111110000000000, 0b00101110111000000001110000000000)
// Advanced SIMD modified immediate
INST(MOVI_32_shifted_imm, "MOVI", (TODO),   0b10111111111110001001110000000000, 0b00001111000000000000010000000000)
INST(ORR_vec_imm_32, "ORR", (TODO),         0b10111111111110001001110000000000, 0b00001111000000000001010000000000)
INST(MOVI_16_shifted_imm, "MOVI", (TODO),   0b10111111111110001101110000000000, 0b00001111000000001000010000000000)
INST(ORR_vec_imm_16, "ORR", (TODO),         0b10111111111110001101110000000000, 0b00001111000000001001010000000000)
INST(MOVI_32_shifting_ones, "MOVI", (TODO), 0b10111111111110001110110000000000, 0b00001111000000001100010000000000)
INST(MOVI_8_imm, "MOVI", (TODO),            0b10111111111110001111110000000000, 0b00001111000000001110010000000000)
INST(FMOV_vec_imm_single, "FMOV", (TODO),   0b10111111111110001111110000000000, 0b00001111000000001111010000000000)
INST(MVNI_32_shifted_imm, "MVNI", (TODO),   0b10111111111110001001110000000000, 0b00101111000000000000010000000000)
INST(BIC_vec_imm_32, "BIC", (TODO),         0b10111111111110001001110000000000, 0b00101111000000000001010000000000)
INST(MVNI_16_shifted_imm, "MVNI", (TODO),   0b10111111111110001101110000000000, 0b00101111000000001000010000000000)
INST(BIC_vec_imm_16, "BIC", (TODO),         0b10111111111110001101110000000000, 0b00101111000000001001010000000000)
INST(MVNI_32_shifting_ones, "MVNI", (TODO), 0b10111111111110001110110000000000, 0b00101111000000001100010000000000)
INST(MOVI_64_scalar, "MOVI", (TODO),        0b11111111111110001111110000000000, 0b00101111000000001110010000000000)
INST(MOVI_64_vec, "MOVI", (TODO),           0b11111111111110001111110000000000, 0b01101111000000001110010000000000)
INST(FMOV_vec_imm_double, "FMOV", (TODO),   0b11111111111110001111110000000000, 0b01101111000000001111010000000000)
// Advanced SIMD shift by immediate
INST(SSHR_vec, "SSHR", (TODO),           0b10111111100000001111110000000000, 0b00001111000000000000010000000000, (0b00000000011110000000000000000000))
INST(SSRA_vec, "SSRA", (TODO),           0b10111111100000001111110000000000, 0b00001111000000000001010000000000, (0b00000000011110000000000000000000))
INST(SRSHR_vec, "SRSHR", (TODO),         0b10111111100000001111110000000000, 0b00001111000000000010010000000000, (0b00000000011110000000000000000000))
INST(SRSRA_vec, "SRSRA", (TODO),         0b10111111100000001111110000000000, 0b00001111000000000011010000000000, (0b00000000011110000000000000000000))
INST(SHL_vec, "SHL", (TODO),             0b10111111100000001111110000000000, 0b00001111000000000101010000000000, (0b00000000011110000000000000000000))
INST(SQSHL_vec_imm, "SQSHL", (TODO),     0b10111111100000001111110000000000, 0b00001111000000000111010000000000, (0b00000000011110000000000000000000))
INST(SHRN_vec, "SHRN", (TODO),           0b11111111100000001111110000000000, 0b00001111000000001000010000000000, (0b00000000011110000000000000000000))
INST(SHRN2_vec, "SHRN2", (TODO),         0b11111111100000001111110000000000, 0b01001111000000001000010000000000, (0b00000000011110000000000000000000))
INST(RSHRN_vec, "RSHRN", (TODO),         0b11111111100000001111110000000000, 0b00001111000000001000110000000000, (0b00000000011110000000000000000000))
INST(RSHRN2_vec, "RSHRN2", (TODO),       0b11111111100000001111110000000000, 0b01001111000000001000110000000000, (0b00000000011110000000000000000000))
INST(SQSHRN_vec, "SQSHRN", (TODO),       0b11111111100000001111110000000000, 0b00001111000000001001010000000000, (0b00000000011110000000000000000000))
INST(SQSHRN2_vec, "SQSHRN2", (TODO),     0b11111111100000001111110000000000, 0b01001111000000001001010000000000, (0b00000000011110000000000000000000))
INST(SQRSHRN_vec, "SQRSHRN", (TODO),     0b11111111100000001111110000000000, 0b00001111000000001001110000000000, (0b00000000011110000000000000000000))
INST(SQRSHRN2_vec, "SQRSHRN2", (TODO),   0b11111111100000001111110000000000, 0b01001111000000001001110000000000, (0b00000000011110000000000000000000))
INST(SSHLL_vec, "SSHLL", (TODO),         0b11111111100000001111110000000000, 0b00001111000000001010010000000000, (0b00000000011110000000000000000000))
INST(SSHLL2_vec, "SSHLL2", (TODO),       0b11111111100000001111110000000000, 0b01001111000000001010010000000000, (0b00000000011110000000000000000000))
INST(SCVTF_vec_fixed, "SCVTF", (TODO),   0b10111111100000001111110000000000, 0b00001111000000001110010000000000, (0b00000000011110000000000000000000))
INST(FCVTZS_vec_fixed, "FCVTZS", (TODO), 0b10111111100000001111110000000000, 0b00001111000000001111110000000000, (0b00000000011110000000000000000000))
INST(USHR_vec, "USHR", (TODO),           0b10111111100000001111110000000000, 0b00101111000000000000010000000000, (0b00000000011110000000000000000000))
INST(USRA_vec, "USRA", (TODO),           0b10111111100000001111110000000000, 0b00101111000000000001010000000000, (0b00000000011110000000000000000000))
INST(URSHR_vec, "URSHR", (TODO),         0b10111111100000001111110000000000, 0b00101111000000000010010000000000, (0b00000000011110000000000000000000))
INST(URSRA_vec, "URSRA", (TODO),         0b10111111100000001111110000000000, 0b00101111000000000011010000000000, (0b00000000011110000000000000000000))
INST(SRI_vec, "SRI", (TODO),             0b10111111100000001111110000000000, 0b00101111000000000100010000000000, (0b00000000011110000000000000000000))
INST(SLI_vec, "SLI", (TODO),             0b10111111100000001111110000000000, 0b00101111000000000101010000000000, (0b00000000011110000000000000000000))
INST(SQSHLU_vec, "SQSHLU", (TODO),       0b10111111100000001111110000000000, 0b00101111000000000110010000000000, (0b00000000011110000000000000000000))
INST(UQSHL_vec_imm, "UQSHL_imm", (TODO), 0b10111111100000001111110000000000, 0b00101111000000000111010000000000, (0b00000000011110000000000000000000))
INST(SQSHRUN_vec, "SQSHRUN", (TODO),     0b11111111100000001111110000000000, 0b00101111000000001000010000000000, (0b00000000011110000000000000000000))
INST(SQSHRUN2_vec, "SQSHRUN2", (TODO),   0b11111111100000001111110000000000, 0b01101111000000001000010000000000, (0b00000000011110000000000000000000))
INST(SQRSHRUN_vec, "SQRSHRUN", (TODO),   0b11111111100000001111110000000000, 0b00101111000000001000110000000000, (0b00000000011110000000000000000000))
INST(SQRSHRUN2_vec, "SQRSHRUN2", (TODO), 0b11111111100000001111110000000000, 0b01101111000000001000110000000000, (0b00000000011110000000000000000000))
INST(UQSHRN_vec, "UQSHRN", (TODO),       0b11111111100000001111110000000000, 0b00101111000000001001010000000000, (0b00000000011110000000000000000000))
INST(UQSHRN2_vec, "UQSHRN2", (TODO),     0b11111111100000001111110000000000, 0b01101111000000001001010000000000, (0b00000000011110000000000000000000))
INST(UQRSHRN_vec, "UQRSHRN", (TODO),     0b11111111100000001111110000000000, 0b00101111000000001001110000000000, (0b00000000011110000000000000000000))
INST(UQRSHRN2_vec, "UQRSHRN2", (TODO),   0b11111111100000001111110000000000, 0b01101111000000001001110000000000, (0b00000000011110000000000000000000))
INST(USHLL_vec, "USHLL", (TODO),         0b11111111100000001111110000000000, 0b00101111000000001010010000000000, (0b00000000011110000000000000000000))
INST(USHLL2_vec, "USHLL2", (TODO),       0b11111111100000001111110000000000, 0b01101111000000001010010000000000, (0b00000000011110000000000000000000))
INST(UCVTF_vec_fixed, "UCVTF", (TODO),   0b10111111100000001111110000000000, 0b00101111000000001110010000000000, (0b00000000011110000000000000000000))
INST(FCVTZU_vec_fixed, "FCVTZU", (TODO), 0b10111111100000001111110000000000, 0b00101111000000001111110000000000, (0b00000000011110000000000000000000))
// Advanced SIMD vector x indexed element
INST(SMLAL_vec_element, "SMLAL", (TODO),       0b11111111000000001111010000000000, 0b00001111000000000010000000000000)
INST(SMLAL2_vec_element, "SMLAL2", (TODO),     0b11111111000000001111010000000000, 0b01001111000000000010000000000000)
INST(SQDMLAL_vec_element, "SQDMLAL", (TODO),   0b11111111000000001111010000000000, 0b00001111000000000011000000000000)
INST(SQDMLAL2_vec_element, "SQDMLAL2", (TODO), 0b11111111000000001111010000000000, 0b01001111000000000011000000000000)
INST(SMLSL_vec_element, "SMLSL", (TODO),       0b11111111000000001111010000000000, 0b00001111000000000110000000000000)
INST(SMLSL2_vec_element, "SMLSL2", (TODO),     0b11111111000000001111010000000000, 0b01001111000000000110000000000000)
INST(SQDMLSL_vec_element, "SQDMLSL", (TODO),   0b11111111000000001111010000000000, 0b00001111000000000111000000000000)
INST(SQDMLSL2_vec_element, "SQDMLSL2", (TODO), 0b11111111000000001111010000000000, 0b01001111000000000111000000000000)
INST(MUL_vec_element, "MUL", (TODO),           0b10111111000000001111010000000000, 0b00001111000000001000000000000000)
INST(SMULL_vec_element, "SMULL", (TODO),       0b11111111000000001111010000000000, 0b00001111000000001010000000000000)
INST(SMULL2_vec_element, "SMULL2", (TODO),     0b11111111000000001111010000000000, 0b01001111000000001010000000000000)
INST(SQDMULL_vec_element, "SQDMULL", (TODO),   0b11111111000000001111010000000000, 0b00001111000000001011000000000000)
INST(SQDMULL2_vec_element, "SQDMULL2", (TODO), 0b11111111000000001111010000000000, 0b01001111000000001011000000000000)
INST(SQDMULH_vec_element, "SQDMULH", (TODO),   0b10111111000000001111010000000000, 0b00001111000000001100000000000000)
INST(SQRDMULH_vec_element, "SQRDMULH", (TODO), 0b10111111000000001111010000000000, 0b00001111000000001101000000000000)
INST(FMLA_vec_element, "FMLA", (TODO),         0b10111111100000001111010000000000, 0b00001111100000000001000000000000)
INST(FMLS_vec_element, "FMLS", (TODO),         0b10111111100000001111010000000000, 0b00001111100000000101000000000000)
INST(FMUL_vec_element, "FMUL", (TODO),         0b10111111100000001111010000000000, 0b00001111100000001001000000000000)
INST(MLA_vec_element, "MLA", (TODO),           0b10111111000000001111010000000000, 0b00101111000000000000000000000000)
INST(UMLAL_vec_element, "UMLAL", (TODO),       0b11111111000000001111010000000000, 0b00101111000000000010000000000000)
INST(UMLAL2_vec_element, "UMLAL2", (TODO),     0b11111111000000001111010000000000, 0b01101111000000000010000000000000)
INST(MLS_vec_element, "MLS", (TODO),           0b10111111000000001111010000000000, 0b00101111000000000100000000000000)
INST(UMLSL_vec_element, "UMLSL", (TODO),       0b11111111000000001111010000000000, 0b00101111000000000110000000000000)
INST(UMLSL2_vec_element, "UMLSL2", (TODO),     0b11111111000000001111010000000000, 0b01101111000000000110000000000000)
INST(UMULL_vec_element, "UMULL", (TODO),       0b11111111000000001111010000000000, 0b00101111000000001010000000000000)
INST(UMULL2_vec_element, "UMULL2", (TODO),     0b11111111000000001111010000000000, 0b01101111000000001010000000000000)
INST(FMULX_vec_element, "FMULX", (TODO),       0b10111111100000001111010000000000, 0b00101111100000001001000000000000)