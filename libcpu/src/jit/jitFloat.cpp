#include "jit.h"

namespace cpu {

namespace jit {

void registerFloatInstructions() {
    registerInstruction(instructionID::SCVTF_32_single_fixed, FALLBACK);
    registerInstruction(instructionID::UCVTF_32_single_fixed, FALLBACK);
    registerInstruction(instructionID::FCVTZS_single_32_fixed, FALLBACK);
    registerInstruction(instructionID::FCVTZU_single_32_fixed, FALLBACK);
    registerInstruction(instructionID::SCVTF_32_double_fixed, FALLBACK);
    registerInstruction(instructionID::UCVTF_32_double_fixed, FALLBACK);
    registerInstruction(instructionID::FCVTZS_double_32_fixed, FALLBACK);
    registerInstruction(instructionID::FCVTZU_double_32_fixed, FALLBACK);
    registerInstruction(instructionID::SCVTF_64_single_fixed, FALLBACK);
    registerInstruction(instructionID::UCVTF_64_single_fixed, FALLBACK);
    registerInstruction(instructionID::FCVTZS_single_64_fixed, FALLBACK);
    registerInstruction(instructionID::FCVTZU_single_64_fixed, FALLBACK);
    registerInstruction(instructionID::SCVTF_64_double_fixed, FALLBACK);
    registerInstruction(instructionID::UCVTF_64_double_fixed, FALLBACK);
    registerInstruction(instructionID::FCVTZS_double_64_fixed, FALLBACK);
    registerInstruction(instructionID::FCVTZU_double_64_fixed, FALLBACK);
    registerInstruction(instructionID::FCVTNS_single_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTNU_single_32_int, FALLBACK);
    registerInstruction(instructionID::SCVTF_32_single_int, FALLBACK);
    registerInstruction(instructionID::UCVTF_32_single_int, FALLBACK);
    registerInstruction(instructionID::FCVTAS_single_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTAU_single_32_int, FALLBACK);
    registerInstruction(instructionID::FMOV_single_32, FALLBACK);
    registerInstruction(instructionID::FMOV_32_single, FALLBACK);
    registerInstruction(instructionID::FCVTPS_single_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTPU_single_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTMS_single_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTMU_single_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTZS_single_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTZU_single_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTNS_double_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTNU_double_32_int, FALLBACK);
    registerInstruction(instructionID::SCVTF_32_double_int, FALLBACK);
    registerInstruction(instructionID::UCVTF_32_double_int, FALLBACK);
    registerInstruction(instructionID::FCVTAS_double_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTAU_double_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTPS_double_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTPU_double_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTMS_double_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTMU_double_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTZS_double_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTZU_double_32_int, FALLBACK);
    registerInstruction(instructionID::FCVTNS_single_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTNU_single_64_int, FALLBACK);
    registerInstruction(instructionID::SCVTF_64_single_int, FALLBACK);
    registerInstruction(instructionID::UCVTF_64_single_int, FALLBACK);
    registerInstruction(instructionID::FCVTAS_single_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTAU_single_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTPS_single_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTPU_single_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTMS_single_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTMU_single_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTZS_single_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTZU_single_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTNS_double_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTNU_double_64_int, FALLBACK);
    registerInstruction(instructionID::SCVTF_64_double_int, FALLBACK);
    registerInstruction(instructionID::UCVTF_64_double_int, FALLBACK);
    registerInstruction(instructionID::FCVTAS_double_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTAU_double_64_int, FALLBACK);
    registerInstruction(instructionID::FMOV_double_64, FALLBACK);
    registerInstruction(instructionID::FMOV_64_double, FALLBACK);
    registerInstruction(instructionID::FCVTPS_double_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTPU_double_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTMS_double_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTMU_double_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTZS_double_64_int, FALLBACK);
    registerInstruction(instructionID::FCVTZU_double_64_int, FALLBACK);
    registerInstruction(instructionID::FMOV_top128_64, FALLBACK);
    registerInstruction(instructionID::FMOV_64_top128, FALLBACK);
    registerInstruction(instructionID::FMOV_reg_single, FALLBACK);
    registerInstruction(instructionID::FABS_single, FALLBACK);
    registerInstruction(instructionID::FNEG_single, FALLBACK);
    registerInstruction(instructionID::FSQRT_single, FALLBACK);
    registerInstruction(instructionID::FCVT_single_double, FALLBACK);
    registerInstruction(instructionID::FCVT_single_half, FALLBACK);
    registerInstruction(instructionID::FRINTN_single, FALLBACK);
    registerInstruction(instructionID::FRINTP_single, FALLBACK);
    registerInstruction(instructionID::FRINTM_single, FALLBACK);
    registerInstruction(instructionID::FRINTZ_single, FALLBACK);
    registerInstruction(instructionID::FRINTA_single, FALLBACK);
    registerInstruction(instructionID::FRINTX_single, FALLBACK);
    registerInstruction(instructionID::FRINTI_single, FALLBACK);
    registerInstruction(instructionID::FMOV_reg_double, FALLBACK);
    registerInstruction(instructionID::FABS_double, FALLBACK);
    registerInstruction(instructionID::FNEG_double, FALLBACK);
    registerInstruction(instructionID::FSQRT_double, FALLBACK);
    registerInstruction(instructionID::FCVT_double_single, FALLBACK);
    registerInstruction(instructionID::FCVT_double_half, FALLBACK);
    registerInstruction(instructionID::FRINTN_double, FALLBACK);
    registerInstruction(instructionID::FRINTP_double, FALLBACK);
    registerInstruction(instructionID::FRINTM_double, FALLBACK);
    registerInstruction(instructionID::FRINTZ_double, FALLBACK);
    registerInstruction(instructionID::FRINTA_double, FALLBACK);
    registerInstruction(instructionID::FRINTX_double, FALLBACK);
    registerInstruction(instructionID::FRINTI_double, FALLBACK);
    registerInstruction(instructionID::FCVT_half_single, FALLBACK);
    registerInstruction(instructionID::FCVT_half_double, FALLBACK);
    registerInstruction(instructionID::FCMP_single, FALLBACK);
    registerInstruction(instructionID::FCMP_single_zero, FALLBACK);
    registerInstruction(instructionID::FCMPE_single, FALLBACK);
    registerInstruction(instructionID::FCMPE_single_zero, FALLBACK);
    registerInstruction(instructionID::FCMP_double, FALLBACK);
    registerInstruction(instructionID::FCMP_double_zero, FALLBACK);
    registerInstruction(instructionID::FCMPE_double, FALLBACK);
    registerInstruction(instructionID::FCMPE_double_zero, FALLBACK);
    registerInstruction(instructionID::FMOV_imm_single, FALLBACK);
    registerInstruction(instructionID::FMOV_imm_double, FALLBACK);
    registerInstruction(instructionID::FCCMP_single, FALLBACK);
    registerInstruction(instructionID::FCCMPE_single, FALLBACK);
    registerInstruction(instructionID::FCCMP_double, FALLBACK);
    registerInstruction(instructionID::FCCMPE_double, FALLBACK);
    registerInstruction(instructionID::FMUL_single, FALLBACK);
    registerInstruction(instructionID::FDIV_single, FALLBACK);
    registerInstruction(instructionID::FADD_single, FALLBACK);
    registerInstruction(instructionID::FSUB_single, FALLBACK);
    registerInstruction(instructionID::FMAX_single, FALLBACK);
    registerInstruction(instructionID::FMIN_single, FALLBACK);
    registerInstruction(instructionID::FMAXNM_single, FALLBACK);
    registerInstruction(instructionID::FMINNM_single, FALLBACK);
    registerInstruction(instructionID::FNMUL_single, FALLBACK);
    registerInstruction(instructionID::FMUL_double, FALLBACK);
    registerInstruction(instructionID::FDIV_double, FALLBACK);
    registerInstruction(instructionID::FADD_double, FALLBACK);
    registerInstruction(instructionID::FSUB_double, FALLBACK);
    registerInstruction(instructionID::FMAX_double, FALLBACK);
    registerInstruction(instructionID::FMIN_double, FALLBACK);
    registerInstruction(instructionID::FMAXNM_double, FALLBACK);
    registerInstruction(instructionID::FMINNM_double, FALLBACK);
    registerInstruction(instructionID::FNMUL_double, FALLBACK);
    registerInstruction(instructionID::FCSEL_single, FALLBACK);
    registerInstruction(instructionID::FCSEL_double, FALLBACK);
    registerInstruction(instructionID::FMADD_single, FALLBACK);
    registerInstruction(instructionID::FMSUB_single, FALLBACK);
    registerInstruction(instructionID::FNMADD_single, FALLBACK);
    registerInstruction(instructionID::FNMSUB_single, FALLBACK);
    registerInstruction(instructionID::FMADD_double, FALLBACK);
    registerInstruction(instructionID::FMSUB_double, FALLBACK);
    registerInstruction(instructionID::FNMADD_double, FALLBACK);
    registerInstruction(instructionID::FNMSUB_double, FALLBACK);
}

} // namespace jit

} // namespace cpu